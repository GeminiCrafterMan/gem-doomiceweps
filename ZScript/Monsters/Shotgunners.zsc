class GWM_ShitShotgunGuySpawner : RandomSpawner
{
	override void BeginPlay()
	{
		if (self.curSector.lightlevel <= 112 && random(0,7) == 7)
		{
			Spawn("GWM_ShadowHunter", self.Pos);
			self.Destroy();
		}
		else Super.BeginPlay();
	}
	Default
	{
		DropItem "GWM_ShitShotgunGuy";
	}
}

class GWM_ShitShotgunGuy : ShotgunGuy
{
	Default
	{
		//$Category Monsters
		//$Title "Shotgun Zombie
		AttackSound "weapons/zsgshot";
		DropItem "GWM_ZombieShotgun";
		Obituary "$OB_ZOMBIESHOTGUNGUY";
		Tag "$TAG_ZOMBIESHOTGUNGUY";
	}
	States
	{
		Missile:
			SPOS E 10 A_FaceTarget;
			SPOS F 10 Bright 
			{
				A_CustomBulletAttack(20.5, 10.5, 4, 6, "ZBulletPuff", 0, CBAF_NORANDOM, missile: "GWM_Tracer", spawnofs_xy: 9);
				A_SpawnItemEx("GWM_MuzzleFlashLight2",0,0,15);	
			}
			SPOS E 3;
			SPOS E 6 {
				A_SpawnItemEX("GWM_ShotgunCasing",5,0,20,frandom(-2,4),frandom(3,8),frandom(3,8));
				A_StartSound("weapons/zsgpump1");
			}
			SPOS E 3 A_StartSound("weapons/zsgpump2");
			Goto See;
		Death.Fire:
			TNT1 A 0 {
				bNOBLOOD = true;
				A_SetTranslation("GWM_Burnt");
			}
			SPOS M 5;
			SPOS N 5 A_StartSound("monsters/burndeath");
			SPOS O 5 A_NoBlocking;
			SPOS PQRST 5;
			SPOS U -1;
			Stop;
		Death:
			TNT1 A 0 A_Jump(120,"Death2");
			SPOS H 5;
			SPOS I 5 A_Scream;
			SPOS J 5 A_NoBlocking;
			SPOS K 5;
			SPOS L -1;
			Stop;
		Death2:
			SMAN A 5;
			SMAN B 5 A_Scream;
			SMAN C 5 A_NoBlocking;
			SMAN D 5;
			SMAN E -1;
			Stop;
		Raise:
			TNT1 A 0 {bNOBLOOD = false;}
			Goto Super::Raise;
	}
}

class GWM_KahunaShotgunGuy : ShotgunGuy
{
	Default
	{
		//$Category Monsters
		//$Title "Slayer's Kahuna Shotgun Zombie
		Health 80;
		AttackSound "weapons/skshot";
		DropItem "GWM_Shotgun",25;
		DropItem "GWM_Shell",230;
		Obituary "$OB_KAHUNASHOTGUNGUY";
		Tag "$TAG_KAHUNASHOTGUNGUY";
	}
	States
	{
	
		Spawn:
			KASG AB 10 A_Look;
			Loop;
		See:
			KASG AABBCCDD 3 A_Chase;
			Loop;
		
		Missile:
			TNT1 A 0 A_Jumpif(target.countinv("GWM_IsPlayer")&&Distance3d(target)<1000,"Missile2");
			TNT1 A 0 A_Jump(120,"Missile2");
			KASG E 10 A_FaceTarget;
			KASG F 5 Bright 
			{
				A_CustomBulletAttack(12.5, 8.5, 5, 6, "ZBulletPuff", 0, CBAF_NORANDOM, missile: "GWM_Tracer", spawnofs_xy: 9);
				A_SpawnItemEx("GWM_MuzzleFlashLight2",0,0,15);	
			}
			KASG E 4;
			KASG E 2 A_StartSound("weapons/skpump1");
			KASG E 4 A_SpawnItemEX("GWM_ShotgunCasing",5,0,20,frandom(-2,4),frandom(3,8),frandom(3,8));
			KASG E 4 A_StartSound("weapons/skpump2");
			Goto See;
		
		Missile2:
			KASG E 24 {
				A_FaceTarget();
				A_StartSound("monsters/skguy/warning", CHAN_VOICE);
			}
			KASG F 5 Bright 
			{A_CustomBulletAttack(12.5, 8.5, 6, 6, "ZBulletPuff", 0, CBAF_NORANDOM, missile: "GWM_Tracer", spawnofs_xy: 9);
			A_SpawnItemEx("GWM_MuzzleFlashLight2",0,0,15);}
			KASG E 7 A_SpawnItemEX("GWM_ShotgunCasing",5,0,20,frandom(-2,4),frandom(3,8),frandom(3,8));
			
			KASG F 5 Bright 
			{A_CustomBulletAttack(12.5, 8.5, 6, 7, "ZBulletPuff", 0, CBAF_NORANDOM, missile: "GWM_Tracer", spawnofs_xy: 9);
			A_SpawnItemEx("GWM_MuzzleFlashLight2",0,0,15);}
			KASG E 7 A_SpawnItemEX("GWM_ShotgunCasing",5,0,20,frandom(-2,4),frandom(3,8),frandom(3,8));
			
			KASG F 5 Bright 
			{A_CustomBulletAttack(12.5, 8.5, 6, 8, "ZBulletPuff", 0, CBAF_NORANDOM, missile: "GWM_Tracer", spawnofs_xy: 9);
			A_SpawnItemEx("GWM_MuzzleFlashLight2",0,0,15);}
			KASG E 7 A_SpawnItemEX("GWM_ShotgunCasing",5,0,20,frandom(-2,4),frandom(3,8),frandom(3,8));
			
			KASG F 5 Bright 
			{A_CustomBulletAttack(12.5, 8.5, 6, 9, "ZBulletPuff", 0, CBAF_NORANDOM, missile: "GWM_Tracer", spawnofs_xy: 9);
			A_SpawnItemEx("GWM_MuzzleFlashLight2",0,0,15);}
			KASG E 7 A_SpawnItemEX("GWM_ShotgunCasing",5,0,20,frandom(-2,4),frandom(3,8),frandom(3,8));
			
			KASG F 5 Bright 
			{A_CustomBulletAttack(23.5, 19.5, 6, 10, "ZBulletPuff", 0, CBAF_NORANDOM, missile: "GWM_Tracer", spawnofs_xy: 9);
			A_SpawnItemEx("GWM_MuzzleFlashLight2",0,0,15);}
			KASG E 7 A_SpawnItemEX("GWM_ShotgunCasing",5,0,20,frandom(-2,4),frandom(3,8),frandom(3,8));
			
			
			KASG E 5 A_StartSound("weapons/skpump1");
			KASG E 2 A_StartSound("weapons/skpump2");
			Goto See;
		Pain:
			KASG G 3;
			KASG G 3 A_Pain;
			Goto See;
		Death:
			TNT1 A 0 A_Jump(120,"Death2");
			KASG H 5;
			KASG I 5 A_Scream;
			KASG J 5 A_NoBlocking;
			KASG KLM 5;
			KASG N -1;
			Stop;
		Death2:
			KAS2 A 5;
			KAS2 B 5 A_Scream;
			KAS2 C 5 A_NoBlocking;
			KAS2 DE 5;
			KAS2 F -1;
			Stop;
		XDeath:
			KASG O 5;
			KASG P 5 A_XScream;
			KASG Q 5 A_NoBlocking;
			KASG RSTUV 5;
			KASG X -1;
			Stop;
		Death.Fire:
			TNT1 A 0 {
				bNOBLOOD = true;
				A_SetTranslation("GWM_Burnt");
			}
			KASG O 5;
			KASG P 5 A_StartSound("monsters/burndeath");
			KASG Q 5 A_NoBlocking;
			KASG RSTUV 5;
			KASG X -1;
			Stop;
		Raise:
			TNT1 A 0 {bNOBLOOD = false;}
			KASG MLKJIH 5;
			Goto See;
	}
}

class GWM_IceShotgunGuy : ShotgunGuy
{
	Default
	{
		//$Category Monsters
		//$Title "Ice Shotgun Zombie
		Translation "Ice";
		DropItem "GWM_IceShotgun";
		Obituary "$OB_ICESHOTGUNGUY";
		BloodColor "76 76 8D";
		Tag "$TAG_ICESHOTGUNGUY";
	}
	States
	{
		Spawn:
			ISGZ AB 10 A_Look;
			Loop;
		See:
			ISGZ AABBCCDD 3 A_Chase;
			Loop;
		Missile:
			ISGZ E 10 A_FaceTarget;
			ISGZ F 10 Bright
			{
				A_StartSound("weapons/iceshot", CHAN_WEAPON);
				A_SpawnProjectile("GWM_ZombieShotgunIceShard",32,0,0,0,0);
				
				A_SpawnProjectile("GWM_ZombieShotgunIceShard",32,0,0,13,13);
				A_SpawnProjectile("GWM_ZombieShotgunIceShard",32,0,0,13,-13);
				A_SpawnProjectile("GWM_ZombieShotgunIceShard",32,0,0,-13,13);
				A_SpawnProjectile("GWM_ZombieShotgunIceShard",32,0,0,-13,-13);
				
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
//				SpawnMissile(target, "GWM_ShotgunGuyIceChunk");
			}
			ISGZ E 9;
			ISGZ E 4 {
				A_StartSound("weapons/icepump1", CHAN_BODY);
				A_StartSound("weapons/icehiss", CHAN_AUTO);
			}
			ISGZ E 4;
			ISGZ E 5 A_StartSound("weapons/icepump2", CHAN_BODY);
			Goto See;
		Pain:
			ISGZ G 3;
			ISGZ G 3 A_Pain;
			Goto See;
		Death:
			ISGZ H 5;
			ISGZ I 5 A_Scream;
			ISGZ J 5;
			ISGZ K 5;
			ISGZ L 10 A_Stop;
			ISGZ L 10 A_FreezeDeathChunks;
			Stop;
		XDeath:
			ISGZ L 5 A_IceGuyDie;
			Stop;
		Death.Fire:
			ISGZ HIJK 5;
			TNT1 A 0 A_NoBlocking;
			ISGZ L 5;
			TNT1 A 0 {
				bNOBLOOD = true;
			}
			ISGZ M -1;
			Stop;
		Raise:
			Stop;
	}
}


class GWM_ZombieShotgunIceShard : GWM_ShotgunIceShard
{

	override int SpecialMissileHit(actor victim) //decides how to spawn the ice thinker
    {
        if (!self.victim && victim.bSHOOTABLE && victim != target && victim.bDORMANT == 0)
		{
			if (victim.health <= self.Damage)
			{
				victim.A_Die("Ice");
				return 1;
			}
			
			if (victim.CountInv("IceSlowCount")== 0)
			{
				victim.A_SpawnProjectile("GWM_IceStatusThinker");
			}
			A_StartSound("Status/IceHit");
			
			victim.A_GiveInventory("IceSlowCount",25);
				
		}
        return -1; // 1 to keep going on, -1 to die the appropriate death (XDeath in this case, since ideally it hit a bleeding actor)
    }
	
	Default
	{
		Speed 50;
		Damagefunction (10);
	}
	States
	{
		Spawn:
			SHGI A 1 Bright 
			{
			A_SpawnItemEx("IceFog2", vel.x*frandom(-1,-0.4), 0, vel.z*frandom(-1,-0.4), FRandom(-0.5, 0.5), FRandom(-0.5, 0.5), FRandom(-0.5, 0.5));
			A_SpawnItemEx("IceFog2", vel.x*frandom(-1,-0.4), 0, vel.z*frandom(-1,-0.4), FRandom(-0.5, 0.5), FRandom(-0.5, 0.5), FRandom(-0.5, 0.5));
			A_SpawnItemEx("IceFog2", vel.x*frandom(-1,-0.4), 0, vel.z*frandom(-1,-0.4), FRandom(-0.5, 0.5), FRandom(-0.5, 0.5), FRandom(-0.5, 0.5));
			}
			loop;
		Death:
		XDeath:
			TNT1 AAAA 0 A_SpawnItemEX("StatusIceChunk",0,0,0,frandom(-4,4),frandom(-4,4),frandom(-1,6));
			SHGI FBCDE 4 Bright;
			Stop;
	}
}

class GWM_ShadowHunter : Actor
{
	Default
	{
		//$Category Monsters
		//$Title "Shadow Hunter
		Tag "$TAG_SHADOWHUNTER";
		DropItem "GWM_Revolver";
		Health 180;
		Radius 16;
		Height 56;
		Speed 5;
		PainChance 50;
		+FLOORCLIP
		+CANTSEEK
		+SEEINVISIBLE
		+AVOIDMELEE
		RenderStyle "Translucent";
		Alpha 0.5;
		Monster;
		SeeSound "monsters/shadowhunter/sight";
		DeathSound "monsters/shadowhunter/death";
		ActiveSound "monsters/shadowhunter/idle";
		PainSound "monsters/shadowhunter/pain";
		Obituary "$OB_SHADOWHUNTER";
		GibHealth 30;
	}
	States
	{
		Spawn:
			SHAH AB 10 A_Look;
			Loop;
		See:
			SHAH AAAA 2 A_Chase;
			TNT1 A 0 {
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
			}
			SHAH BBBB 2 A_Chase;
			TNT1 A 0 {
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
			}
			SHAH CCCC 2 A_Chase;
			TNT1 A 0 {
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
			}
			SHAH DDDD 2 A_Chase;
			TNT1 A 0 {
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
			}
			TNT1 A 0 A_JumpIfInTargetLOS("Dodge", 0, JLOSF_DEADNOJUMP, 0, 0);
			Loop;
		Dodge:
			SHAH A 1 A_FaceTarget;
			TNT1 A 0 A_Jump(256, "DodgeRight", "DodgeLeft");
		DodgeLeft:
			TNT1 A 0 {
				ThrustThing(angle*256/360+192, 12, 0, 0);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
			}
			Goto See;
		DodgeRight:
			TNT1 A 0 {
				ThrustThing(angle*256/360+64, 12, 0, 0);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
			}
			Goto See;
		Missile:
			SHAG A 20 A_FaceTarget;
			SHAG A 1 A_FaceTarget;
			SHAG B 1 {
				A_SpawnProjectile("GWM_ShadowBullet", 32, 0, 0, CMF_OFFSETPITCH, 0);
				A_StartSound("weapons/rvlvfire");
			}
			SHAG B 5 Bright;
			SHAG A 10;
			TNT1 A 0 A_Jump(256, "See", "DodgeRight", "DodgeLeft", "Vanish");
		Vanish:
			TNT1 A 0 {
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDouble",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SetInvulnerable();
				bSOLID = false;
			}
			SHAG A 5 A_FadeOut(0.1,0);
			SHAG A 5 A_FadeOut(0.2,0);
			SHAG A 5 A_FadeOut(0.3,0);
			SHAG A 5 A_FadeOut(0.4,0);
			SHAG A 5 A_FadeOut(0.5,0);
			SHAG A 5 A_FadeOut(0.6,0);
			SHAG A 5 A_FadeOut(0.7,0);
			SHAG A 5 A_FadeOut(0.8,0);
			SHAG A 5 A_FadeOut(0.9,0);
			SHAG A 5 A_FadeOut(1,0);
			SHAH A 0 {
				bNOTAUTOAIMED = true;
				A_SetSpeed(20);
			}
			SHAH AAAAAAAAAAAAAAAAAAAA 0 A_Wander;
			SHAH A 50;
			SHAH A 3 A_FadeIn(1,0);
			SHAH A 3 A_FadeIn(0.9,0);
			SHAH A 3 A_FadeIn(0.8,0);
			SHAH A 3 A_FadeIn(0.7,0);
			SHAH A 3 A_FadeIn(0.6,0);
			SHAH A 3 A_FadeIn(0.5,0);
			SHAH A 3 A_FadeIn(0.4,0);
			SHAH A 3 A_FadeIn(0.3,0);
			SHAH A 3 A_FadeIn(0.2,0);
			SHAH A 3 A_FadeIn(0.1,0);
			SHAH A 3 A_FadeIn(0,0);
			SHAH A 0 {
				A_SetTranslucent(0.5,0);
				A_SetSpeed(5);
				bNOTAUTOAIMED = false;
				bSOLID = true;
				A_UnSetInvulnerable();
			}
			Goto See;
		Pain:
			SHAP A 4 A_Pain;
			TNT1 A 0 {
				A_SpawnItemEx("GWM_HuntersDoubleP",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDoubleP",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDoubleP",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDoubleP",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SpawnItemEx("GWM_HuntersDoubleP",0,0,0,random(-10,10),random(-10,10),0,0, SXF_NOCHECKPOSITION);
				A_SetInvulnerable();
				bSOLID = false;
			}
			SHAP A 5 A_FadeOut(0.1,0);
			SHAP A 5 A_FadeOut(0.2,0);
			SHAP A 5 A_FadeOut(0.3,0);
			SHAP A 5 A_FadeOut(0.4,0);
			SHAP A 5 A_FadeOut(0.5,0);
			SHAP A 5 A_FadeOut(0.6,0);
			SHAP A 5 A_FadeOut(0.7,0);
			SHAP A 5 A_FadeOut(0.8,0);
			SHAP A 5 A_FadeOut(0.9,0);
			SHAP A 5 A_FadeOut(1,0);
			SHAH A 0 {
				bNOTAUTOAIMED = true;
				A_SetSpeed(30);
			}
			SHAP AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander;
			SHAH A 50;
			SHAH A 3 A_FadeIn(1,0);
			SHAH A 3 A_FadeIn(0.9,0);
			SHAH A 3 A_FadeIn(0.8,0);
			SHAH A 3 A_FadeIn(0.7,0);
			SHAH A 3 A_FadeIn(0.6,0);
			SHAH A 3 A_FadeIn(0.5,0);
			SHAH A 3 A_FadeIn(0.4,0);
			SHAH A 3 A_FadeIn(0.3,0);
			SHAH A 3 A_FadeIn(0.2,0);
			SHAH A 3 A_FadeIn(0.1,0);
			SHAH A 3 A_FadeIn(0,0);
			SHAH A 0 {
				A_SetTranslucent(0.5,0);
				A_SetSpeed(5);
				bNOTAUTOAIMED = false;
				bSOLID = true;
				A_UnSetInvulnerable();
			}
			Goto See;
		Death:
			TNT1 A 0 A_Scream;
			SHAD AB 5;
			TNT1 A 0 A_NoBlocking;
			SHAD CDE 5;
			SHAD E -1;
			Stop;
		XDeath:
			TNT1 A 0 A_Scream;
			SHXD ABCD 4;
			TNT1 A 0 A_NoBlocking;
			SHXD EFGH 4;
			SHXD I -1;
			Stop;
		Death.Fire:
			TNT1 A 0 {
				bNOBLOOD = true;
				A_SetTranslation("GWM_Burnt");
			}
			SHXD ABCD 4;
			TNT1 A 0 A_NoBlocking;
			SHXD EFGH 4;
			SHXD I -1;
			Stop;
	}
}
class GWM_HuntersDouble : Actor
{
	Default
	{
		Radius 16;
		Height 56;
		+FLOORCLIP
		RenderStyle "Translucent";
		Alpha 0.3;
	}
	States
	{
		Spawn:
			SHAH A 10 A_FadeOut(0.1,0);
			SHAH B 10 A_FadeOut(0.2,0);
			SHAH C 10 A_FadeOut(0.3,0);
			SHAH D 10 A_FadeOut(0.4,0);
			SHAH A 10 A_FadeOut(0.5,0);
			SHAH B 10 A_FadeOut(0.6,0);
			SHAH C 10 A_FadeOut(0.7,0);
			SHAH D 10 A_FadeOut(0.8,0);
			SHAH A 10 A_FadeOut(0.9,0);
			SHAH B 10 A_FadeOut(1,0);
			Stop;
	}
}
class GWM_HuntersDoubleP : Actor
{
	Default
	{
		Radius 16;
		Height 56;
		+FLOORCLIP
		RenderStyle "Translucent";
		Alpha 0.3;
	}
	States
	{
		Spawn:
			SHAP A 10 A_FadeOut(0.1,0);
			SHAP A 10 A_FadeOut(0.2,0);
			SHAP A 10 A_FadeOut(0.3,0);
			SHAP A 10 A_FadeOut(0.4,0);
			SHAP A 10 A_FadeOut(0.5,0);
			SHAP A 10 A_FadeOut(0.6,0);
			SHAP A 10 A_FadeOut(0.7,0);
			SHAP A 10 A_FadeOut(0.8,0);
			SHAP A 10 A_FadeOut(0.9,0);
			SHAP A 10 A_FadeOut(1,0);
			Stop;
	}
}
class GWM_ShadowBullet : Actor
{
	Default
	{
		Radius 16;
		Height 56;
		DamageFunction (18);
		Speed 50;
		Projectile;
	}
	States
	{
		Spawn:
			SSHO A 1;
			Loop;
		Death:
			SSHO A 1;
			Stop;
	}
}