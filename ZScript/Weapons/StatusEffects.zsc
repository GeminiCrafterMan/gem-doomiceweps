class IceSlowCount : Inventory
{
	Default
	{
		Inventory.MaxAmount 250;
	}
}

class GWM_IceStatusEffect : Actor
{
	
	int Originalspeed;
	
	Default
	{
		+THRUACTORS;
		Scale 1.75;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 1 
			{
				
				if (target != null && target.CountInv("IceSlowCount") == 0)
				{
					target.A_SpawnItemEX("GWM_IceStatusThinker",0,3);
				}
			} 
			TNT1 A 0 A_GivetoTarget("IceSlowCount",15);
			//TNT1 A 0 A_CheckProximity("Death","GWM_IceStatusThinker",40);
			
		Death:
			TNT1 A 2;
			stop;
	}
}


class GWM_IceStatusThinker : Actor
{
	
	int cycletics;
	int Originalspeed;
	
	Default
	{
		+THRUACTORS;
		Scale 1.75;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 1 
		    {
			if (target != null)
				{
				originalspeed = target.Speed;			
				}		
			}
		 Cycle:
			TNT1 A 0
			{
			if (target != null && target.CountInv("IceSlowCount") == 0)
					{
						SetStateLabel("Death");
					}
			}
			
			TNT1 AAAAA 1 A_Warp(AAPTR_TARGET,0,0,15,0,WARPF_INTERPOLATE);
			TNT1 A 0 
			{
			if (target != null)
				{
					
					target.TakeInventory("IceSlowCount",1);
	
					target.Speed = originalspeed - (0.025 *target.CountInv("IceSlowCount"));			
					
						
					
					if (target.Speed < 0)
					{
						target.Speed = 0;
					}
					
				}
			}
			TNT1 A 0 A_Warp(AAPTR_TARGET,0,0,15);
				
			goto Cycle;
			
			WaitToCycle:
			TNT1 B 2
			{
			target.speed = originalspeed;
			}
			goto Cycle;
			
			Death:
			TNT1 B 2;
			stop;
	}
}
