class GWM_Revolver : GWM_WeaponBase
{
	Default
	{
		//$Category Weapons
		//$Title "Revolver
		Weapon.SelectionOrder 1900;
		Weapon.SlotNumber 2;
		Weapon.UpSound "weapons/draw_secondary";
		Weapon.AmmoUse1 3;
		Weapon.AmmoType1 "GWM_LowCaliberMagazine";
		Weapon.AmmoGive 18;

		ZWeapon.MagazineSize 18;
		ZWeapon.ReloadSound "weapons/rvlvreload2";
		ZWeapon.ClickSound "weapons/92fsdryfire";

		+WEAPON.NOAUTOFIRE
		Inventory.PickupSound "weapons/rvlvpickup";
		Inventory.PickupMessage "$GOTREVOLVER";
		AttackSound "weapons/rvlvfire";
		Obituary "$KILLREVOLVER";
		Tag "$TAG_REVOLVER";
	}
	States
	{
		Spawn:
			RVLG Z -1;
			Stop;
		Select:
			TNT1 A 0 {
				ZWL_QuickRaise();
				A_WeaponOffset(-64, 160);
			}
			RVLG YYYYYY 1 {
				A_WeaponOffset(8, -16, WOF_ADD);
			}
			RVLG AA 1 {
				A_WeaponOffset(8, -16, WOF_ADD);
			}
			Goto Ready;
		Deselect:
			RVLG AA 1 {
				A_WeaponOffset(-8, 16, WOF_ADD);
			}
			RVLG YYYYYY 1 {
				A_WeaponOffset(-8, 16, WOF_ADD);
			}
			TNT1 A 0 A_WeaponOffset(0, flags: WOF_KEEPY);
			TNT1 A 0 ZWL_QuickLower;
			Stop;
/*		Select:
			RVLG A 1 A_Raise(18);
			Loop;
		Deselect:
			RVLG A 1 A_Lower(18);
			Loop;*/
		Ready:
			RVLG A 1 ZWL_WeaponReady();
			Loop;
		Fire:
			RVLG B 1 {
				ZWL_FireHitscan(1, 0, tracerType: "GWM_RevolverShot");
				A_SpawnItemEx("GWM_Flash");
				A_SpawnItemEx("GWM_MuzzleFlashLight",0,0,5);
				A_GunFlash();
				A_Setpitch(pitch-2.5);
			}
			RVLG B 1 A_Setpitch(pitch-2.5);
			RVLG CCDDDDCCAA 1 A_Setpitch(pitch+0.5);
			TNT1 A 0 ZWL_CheckReload();
			TNT1 A 0 ZWL_ReFire(null, true);
			Goto Ready;
		Reload:
			TNT1 A 0 {
				if (!invoker.CheckAmmo(PrimaryFire, false, true))
					player.SetPSPrite(OverlayID(), ResolveState("Ready")); // Disallow reloading if there's no more ammo
			}
			RVLG D 1;
			RVLG E 1 A_StartSound("weapons/rvlvreload1", CHAN_BODY);
			RVLG FGHIJK 1;
			RVLG L 4 {
				ZWL_EjectCasing("GWM_PistolCasing", true, 45, offset: (22, -2, -12));
				ZWL_EjectCasing("GWM_PistolCasing", true, 45, offset: (22, 2, -12));
				ZWL_EjectCasing("GWM_PistolCasing", true, 45, offset: (24, -4, -12));
				ZWL_EjectCasing("GWM_PistolCasing", true, 45, offset: (26, -2, -12));
				ZWL_EjectCasing("GWM_PistolCasing", true, 45, offset: (26, 2, -12));
				ZWL_EjectCasing("GWM_PistolCasing", true, 45, offset: (24, 4, -12));
			}
			RVLG MNOPQ 1;
			RVLG R 3 ZWL_Reload();
			RVLG STUVWX 1;
			RVLG HGFE 1;
			TNT1 A 0 A_StartSound("weapons/rvlvreload3", CHAN_BODY);
			RVLG D 3;
			Goto Ready;
		Flash:
			RVLF A 1 Bright A_Light2;
			RVLF B 1 Bright A_Light1;
			Goto LightDone;
	}
}

class GWM_RevolverShot : Actor
{
	Default
	{
		RenderStyle "Add";
		Projectile;
		+HEXENBOUNCE;
		BounceFactor 1;
		WallBounceFactor 1;
		Bouncecount 8;
		Radius 6;
		Height 6;
		DamageFunction (0);
		Speed 100;
		Scale .25;
		MissileHeight 8;
		+EXTREMEDEATH;
		+USEBOUNCESTATE;
		Decal "Bulletchip";
	}
	
	actor victim;


	override int SpecialMissileHit(actor victim) //decides how to spawn the ice thinker
    {
        if (!self.victim && victim.bSHOOTABLE && victim != target && victim.bDORMANT == 0)
		{
			if (victim.health <= 100)
			{
				victim.DamageMobj(self,target,50,'Extreme');
				return -1;
			}
			else
			{
				victim.DamageMobj(self,target,40,'Extreme');
				return -1;
			}

		}
        return -1; // 1 to keep going on, -1 to die the appropriate death (XDeath in this case, since ideally it hit a bleeding actor)
	}
	
	States
	{
		Dummy:
			TRAC A 1 Bright;
			Loop;
		Spawn:
			TRAC A 1 BRIGHT;
			Loop;
		Bounce:
			TRAC A 1 
			{
				A_SpawnItemEX("RevolverBulletPuff");
				A_StartSound("bullet/ricochet",CHAN_AUTO);
				A_SpawnDebris("GWM_TracerSpark");
			}
			goto Spawn;
		Crash:
			TNT1 A 0 A_Jump(256,"Death");
		Death:
			PUFF A 2 BRIGHT A_SpawnDebris("GWM_TracerSpark");
			PUFF B 1 BRIGHT A_SetTranslucent(0.9,0);
			PUFF B 1 BRIGHT A_PlaySound("bullet/ricochet",CHAN_BODY,.5);
			PUFF CD 2 BRIGHT;
			Stop;
		XDeath:
			TNT1 A 3 A_PlaySound("bullet/hitFlesh",CHAN_BODY,.5);
			Stop;
	}
}

class RevolverBulletPuff : ZBulletPuff
{
    Default
    {
        Decal "BulletChip";
        Height 18;
		Radius 18;
    }

	States
	{
	Spawn:
		PUFF A 4 Bright;
		PUFF B 4;
        // Fallthrough
    Melee:
		PUFF CD 4;
		Stop;
    Crash:
		PUFF A 4 Bright A_SpawnItemEx("ZBulletChip");
        PUFF BCD 4;
        Stop;
	}
}