class GWM_Revolver : GWM_WeaponBase
{
	Default
	{
		//$Category Weapons
		//$Title "Revolver
		Weapon.SelectionOrder 1900;
		Weapon.UpSound "weapons/draw_secondary";
		Weapon.AmmoUse1 1;
		Weapon.AmmoType1 "GWM_LowCaliberMagazine";
		Weapon.AmmoGive 6;

		ZWeapon.MagazineSize 6;
		ZWeapon.ReloadSound "weapons/rvlvreload2";
		ZWeapon.ClickSound "weapons/92fsdryfire";

		+WEAPON.NOAUTOFIRE
		Inventory.PickupSound "weapons/rvlvpickup";
		Inventory.PickupMessage "$GOTREVOLVER";
		AttackSound "weapons/rvlvfire";
		Obituary "$KILLREVOLVER";
		Tag "$TAG_REVOLVER";
	}
	States
	{
		Spawn:
			RVLG Z -1;
			Stop;
		Select:
			RVLG A 1 A_Raise(18);
			Loop;
		Deselect:
			RVLG A 1 A_Lower(18);
			Loop;
		Ready:
			RVLG A 1 ZWL_WeaponReady();
			Loop;
		Fire:
			RVLG B 1 {
				ZWL_FireHitscan(1, 32, tracerType: "GWM_Tracer");
				A_SpawnItemEx("GWM_Flash");
				A_SpawnItemEx("GWM_MuzzleFlashLight",0,0,5);
				A_GunFlash();
				A_Setpitch(pitch-2.5);
			}
			RVLG B 1 A_Setpitch(pitch-2.5);
			RVLG CCDDDDCCAA 1 A_Setpitch(pitch+0.5);
			TNT1 A 0 ZWL_CheckReload();
			TNT1 A 0 ZWL_ReFire(null, true);
			Goto Ready;
		Reload:
			TNT1 A 0 {
				if (!invoker.CheckAmmo(PrimaryFire, false, true))
					player.SetPSPrite(OverlayID(), ResolveState("Ready")); // Disallow reloading if there's no more ammo
			}
			RVLG D 1;
			RVLG E 1 A_StartSound("weapons/rvlvreload1", CHAN_BODY);
			RVLG FGHIJK 1;
			RVLG L 4 {
				ZWL_EjectCasing("GWM_PistolCasing", true, 45, offset: (22, -2, -12));
				ZWL_EjectCasing("GWM_PistolCasing", true, 45, offset: (22, 2, -12));
				ZWL_EjectCasing("GWM_PistolCasing", true, 45, offset: (24, -4, -12));
				ZWL_EjectCasing("GWM_PistolCasing", true, 45, offset: (26, -2, -12));
				ZWL_EjectCasing("GWM_PistolCasing", true, 45, offset: (26, 2, -12));
				ZWL_EjectCasing("GWM_PistolCasing", true, 45, offset: (24, 4, -12));
			}
			RVLG MNOPQ 1;
			RVLG R 3 ZWL_Reload();
			RVLG STUVWX 1;
			RVLG HGFE 1;
			TNT1 A 0 A_StartSound("weapons/rvlvreload3", CHAN_BODY);
			RVLG D 3;
			Goto Ready;
		Flash:
			RVLF A 1 Bright A_Light2;
			RVLF B 1 Bright A_Light1;
			Goto LightDone;
	}
}