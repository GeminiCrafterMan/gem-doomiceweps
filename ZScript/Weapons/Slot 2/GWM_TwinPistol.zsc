class GWM_TwinPistol : GWM_WeaponBase
{
	int iswimpy;
	int fired;
	
	Default
	{
		//$Category Weapons
		//$Title "Twin Pistol
		Weapon.SlotNumber 2;
		Weapon.SelectionOrder 1900;
		Weapon.UpSound "weapons/draw_secondary";
		Weapon.AmmoUse1 1;
		Weapon.AmmoType1 "GWM_HollowPointMagazine";
		Weapon.AmmoUse2 0;
		Weapon.AmmoType2 "GWM_HollowPointMagazine";
		Weapon.AmmoGive 24;

		GWM_WeaponBase.BaseVersion "GWM_Pistol";
		ZWeapon.MagazineSize 24;
		ZWeapon.ReloadSound "weapons/pistolclipin";
		ZWeapon.ClickSound "weapons/pistoldryfire";

		+WEAPON.WIMPY_WEAPON
		+WEAPON.NOAUTOFIRE
		+WEAPON.AMMO_OPTIONAL
		Inventory.PickupSound "weapons/pistolpickup";
		Inventory.PickupMessage "$GOTPISTOL";
		Obituary "$KILLPISTOL";
		Tag "$TAG_PISTOL";
		+WEAPON.CHEATNOTWEAPON;
	}
	States
	{
		Recoil:
			TNT1 A 2 A_Setpitch(pitch-0.6);
			TNT1 A 1;
			TNT1 AAAA 1 A_Setpitch(pitch+0.15);
			Stop;
		Spawn:
			PSTG Z -1;
			Stop;
		Select:
			TNT1 A 0 {
				ZWL_QuickRaise();
				A_WeaponOffset(-64, 160);
			}
			PSTG [[[[[[ 1 {
				A_WeaponOffset(8, -16, WOF_ADD);
			}
			PSTG AA 1 {
				A_WeaponOffset(8, -16, WOF_ADD);
			}
			Goto Ready;
		Deselect:
			PSTG AA 1 {
				A_WeaponOffset(-8, 16, WOF_ADD);
			}
			PSTG [[[[[[ 1 {
				A_WeaponOffset(-8, 16, WOF_ADD);
			}
			TNT1 A 0 A_WeaponOffset(0, flags: WOF_KEEPY);
			TNT1 A 0 ZWL_QuickLower;
			Stop;
/*		Select:
			PSTG A 1 A_Raise(18);
			Loop;
		Deselect:
			PSTG A 1 A_Lower(18);
			Loop;*/
		Ready:
			PSTG A 1 ZWL_WeaponReady( );
			Loop;
		Fire:
			TNT1 A 0 A_Jumpif(invoker.ammocount == 0,"Reload");
			PSTG B 2 {
				
				if (invoker.iswimpy == 1)
				{
				ZWL_FireHitscan(2, 10, tracerType: "GWM_WimpTracer");
				A_StartSound("weapons/pistolwimp",CHAN_AUTO);
				}
				else
				{
				ZWL_FireHitscan(2, 18, tracerType: "GWM_Tracer");
				A_StartSound("weapons/pistolTfire",CHAN_AUTO);
				}
				
				A_SpawnItemEx("GWM_Flash");
				A_SpawnItemEx("GWM_MuzzleFlashLight",0,0,5);
				A_GunFlash();
				A_Overlay(55, "Recoil");
			}
			PSTG C 1 {
				ZWL_EjectCasing("GWM_PistolCasing", offset: (24, 0, -6));
			}
			PSTG DEEEDDCCBB 1 A_JumpIf(JustPressed(BT_ATTACK), "Fire");
			TNT1 A 0 ZWL_ReFire(null, true);
			Goto Ready;
			
		AltFire:
			TNT1 A 0 A_Jumpif(invoker.ammocount < 2,"Reload");
			PSTG B 2 {
				invoker.ammocount = invoker.ammocount - 2;
				
				if (invoker.iswimpy == 1)
				{
				ZWL_FireHitscan(4, 10, tracerType: "GWM_WimpTracer");
				ZWL_FireHitscan(4, 10, tracerType: "GWM_WimpTracer");
				A_StartSound("weapons/pistolwimp",CHAN_AUTO);
				}
				else
				{
				ZWL_FireHitscan(3, 18, tracerType: "GWM_Tracer");
				ZWL_FireHitscan(3, 18, tracerType: "GWM_Tracer");
				A_StartSound("weapons/pistolTfire",CHAN_AUTO);
				}
				
				A_SpawnItemEx("GWM_Flash");
				A_SpawnItemEx("GWM_MuzzleFlashLight",0,0,5);
				A_Setpitch(pitch-0.8);
				A_GunFlash();
			}
			PSTG CD 1 {
				ZWL_EjectCasing("GWM_PistolCasing", offset: (24, 0, -6));
				if (invoker.iswimpy == 1)
				{A_StartSound("weapons/pistolwimp",CHAN_AUTO);}	else
				{A_StartSound("weapons/pistolTfire",CHAN_AUTO);}
			}
			PSTG DEEE 1
			{A_Setpitch(pitch+0.20);}
			PSTG DDCCBB 1 A_JumpIf(JustPressed(BT_ATTACK), "Fire");
			TNT1 A 0 ZWL_ReFire(null, true);
			Goto Ready;
		
		Reload:
			TNT1 A 0 {
				if (!invoker.CheckAmmo(PrimaryFire, false, true) && invoker.ammocount == 0)
					player.SetPSPrite(OverlayID(), ResolveState("ReloadWimp")); // Turn to wimp mode if there's no more ammo
				
				if (!invoker.CheckAmmo(PrimaryFire, false, true) && invoker.iswimpy == 1)
					player.SetPSPrite(OverlayID(), ResolveState("ReloadWimp")); // Turn to wimp mode if there's no more ammo
				
				if (invoker.iswimpy == 1) {invoker.ammoCount = 0;}
			}
			TNT1 A 0 A_StartSound("weapons/pistolslideback", CHAN_AUTO);
			PSTG CDE 2;
			PSTG FGHI 2;
			TNT1 A 0 A_StartSound("weapons/pistolclipout", CHAN_AUTO); 
			PSTG JKLM 2;
			TNT1 A 0 ZWL_EjectCasing("GWM_PistolEmptyMag", true, 45, 2, 16, (24, 0, -24));
			PSTG M 4;
			PSTG NOPQR 2;
			TNT1 A 0 ZWL_Reload();
			TNT1 A 0 {invoker.iswimpy = 0;}
			PSTG R 4;
			TNT1 A 0 A_StartSound("weapons/pistolslidefwd", CHAN_AUTO);
			PSTG STU 2;
			PSTG V 3;
			PSTG WXY 2;
			Goto Ready;
			
		ReloadWimp:
			TNT1 A 0 A_StartSound("weapons/pistolslideback", CHAN_AUTO);
			PSTG CDE 3;
			PSTG FGHI 3;
			TNT1 A 0 A_StartSound("weapons/pistolclipout", CHAN_AUTO); 
			PSTG JKLM 3;
			TNT1 A 0 ZWL_EjectCasing("GWM_PistolEmptyMag", true, 45, 2, 16, (24, 0, -24));
			PSTG M 4;
			PSTG NOPQR 2;
			TNT1 A 0 {invoker.ammoCount = 15; invoker.iswimpy = 1;}
			PSTG R 4;
			TNT1 A 0 A_StartSound("weapons/pistolslidefwd", CHAN_AUTO);
			PSTG STU 2;
			PSTG V 3;
			PSTG WXY 2;
			Goto Ready;
			

		Flash:
			PSTF A 1 Bright A_Light2;
			PSTF B 1 Bright A_Light1;
			Goto LightDone;
	}
}