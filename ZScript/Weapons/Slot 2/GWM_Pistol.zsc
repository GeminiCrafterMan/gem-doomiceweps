class GWM_Pistol : GWM_WeaponBase replaces Pistol
{
	Default
	{
		//$Category Weapons
		//$Title "Pistol
		Weapon.SelectionOrder 1900;
		Weapon.UpSound "weapons/draw_secondary";
		Weapon.AmmoUse1 1;
		Weapon.AmmoType1 "GWM_LowCaliberMagazine";
		Weapon.AmmoGive 16;

		ZWeapon.MagazineSize 15;
		//ZWeapon.ReloadSound "weapons/92fsclipin";
		ZWeapon.ClickSound "weapons/92fsdryfire";

		+WEAPON.WIMPY_WEAPON
		+WEAPON.NOAUTOFIRE
		Inventory.PickupSound "weapons/92fspickup";
		Inventory.PickupMessage "$GOT92FS";
		AttackSound "weapons/92fsfire";
		Obituary "$KILL92FS";
		Tag "$TAG_92FS";
	}
	States
	{
		Spawn:
			92FG Z -1;
			Stop;
		Select:
			92FG A 1 A_Raise(18);
			Loop;
		Deselect:
			92FG A 1 A_Lower(18);
			Loop;
		Ready:
			92FG A 1 ZWL_WeaponReady(ZRF_ExtraRound);
			Loop;
		Fire:
			92FG B 2 {
				ZWL_FireHitscan(2, 16, tracerType: "GWM_Tracer");
				A_SpawnItemEx("GWM_Flash");
				A_SpawnItemEx("GWM_MuzzleFlashLight",0,0,5);
				A_Setpitch(pitch-0.6);
				A_GunFlash();
			}
			92FG C 1 {
				ZWL_EjectCasing("GWM_PistolCasing", offset: (24, 0, -6));
			}
			92FG DEEE 1
			{
				A_Setpitch(pitch+0.15);
				ZWL_WeaponReady(ZRF_ExtraRound|ZRF_NoBob);
			}
			92FG DDCCBB 1 ZWL_WeaponReady(ZRF_ExtraRound|ZRF_NoBob);
			TNT1 A 0 ZWL_ReFire(null, true);
			Goto Ready;
		Reload:
			TNT1 A 0 {
				if (!invoker.CheckAmmo(PrimaryFire, false, true))
					player.SetPSPrite(OverlayID(), ResolveState("Ready")); // Disallow reloading if there's no more ammo
			}
			TNT1 A 0 A_StartSound("weapons/92fsslideback", CHAN_AUTO);
			92FG CDE 2;
			92FG FGHI 2;
			TNT1 A 0 A_StartSound("weapons/92fsclipout", CHAN_AUTO); 
			92FG JKLM 2;
			TNT1 A 0 ZWL_EjectCasing("GWM_PistolEmptyMag", true, 45, 2, 16, (24, 0, -24));
			92FG M 4;
			TNT1 A 0 A_StartSound("weapons/92fsclipin", CHAN_AUTO); 
			92FG NOPQR 2;
			TNT1 A 0 ZWL_Reload(-1);
			92FG R 4;
			TNT1 A 0 A_StartSound("weapons/92fsslidefwd", CHAN_AUTO);
			92FG STU 2;
			92FG V 3;
			92FG WXY 2;
			Goto Ready;
		Flash:
			92FF A 1 Bright A_Light2;
			92FF B 1 Bright A_Light1;
			Goto LightDone;
	}
}