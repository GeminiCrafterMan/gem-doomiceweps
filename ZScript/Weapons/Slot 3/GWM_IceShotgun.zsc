class IceShotCharge : Inventory {}

class GWM_IceShotgun : GWM_WeaponBase
{
	
	int icespread;
	int icecharge;
	
	Default
	{
		Weapon.SelectionOrder 1300;
		Inventory.PickupSound "weapons/icepickup";
		Weapon.UpSound "weapons/draw_secondary";
		Weapon.AmmoType "GWM_IceShell";
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 6;

		ZWeapon.MagazineSize 5;
		ZWeapon.ReloadSound "weapons/shell_load";
		ZWeapon.ClickSound "weapons/skempty";

		Tag "$TAG_ICESHOTGUN";
		Inventory.PickupMessage "$GOTICESHOTGUN";
		Obituary "$KILLKICK";
	}
	States
	{
		Ready:
			ISHT A 1 ZWL_WeaponReady(ZRF_ExtraRound);
			Loop;
		/*
		Deselect:
			TNT1 A 0 {
				A_OverlayPivotAlign(OverlayID(), PSPA_RIGHT, PSPA_BOTTOM);
				A_OverlayPivot(OverlayID(), 0.5, 0.5);
			}
			ISHT BC 1;
			ISHT CCCCCC 1 A_OverlayRotate(OverlayID(), 8, WOF_ADD);
			ISHT A 0 ZWL_QuickLower;
			Stop;
		Select:
			TNT1 A 0 {
				ZWL_QuickRaise();
				A_OverlayPivotAlign(OverlayID(), PSPA_RIGHT, PSPA_BOTTOM);
				A_OverlayPivot(OverlayID(), 0, 0.5);
				A_OverlayRotate(OverlayID(), 56);
			}
			ISHT CCCCCC 1 A_OverlayRotate(OverlayID(), -8, WOF_ADD);
			ISHT CB 1 A_OverlayRotate(OverlayID(), 0, WOF_INTERPOLATE);
			TNT1 A 0 {
				A_Overlay(OverlayID(), "Ready");
			}
		*/
		Deselect:
			ISHT A 1 A_Lower(18);
			Loop;
		Select:
			ISHT A 1 A_Raise(18);
			Loop;
		Fire:
			TNT1 A 0 {
				A_OverlayPivot(OverlayID(), 0.5, 0.5, 0);
				A_OverlayPivotAlign(OverlayID(), PSPA_CENTER, PSPA_BOTTOM);
				A_OverlayScale(OverlayID(), 1, 0, WOF_INTERPOLATE);
				A_OverlayRotate(OverlayID(), 0, WOF_INTERPOLATE);
			}
			TNT1 A 0 A_JumpIfInventory("IceShotCharge",1,"Lv2Fire");
			TNT1 A 0 A_JumpIfInventory("IceShotCharge",2,"Lv3Fire");
			
				//if(invoker.icecharge == 1)
				//{SetStateLabel("Lv2Fire");}
				//if(invoker.icecharge == 2)
				//{SetStateLabel("Lv3Fire");}
			
		Lv1Fire:
			ISHT A 1 {
				//ZWL_FireProjectile("GWM_ShotgunIce", 0);
				invoker.icespread = 6;
				
				A_FireProjectile("GWM_ShotgunIceShard", 0,1,0,0,0,0);
				
				A_FireProjectile("GWM_ShotgunIceShard", invoker.icespread,0,0,0,0,0);
				A_FireProjectile("GWM_ShotgunIceShard", -invoker.icespread,0,0,0,0,0);
				A_FireProjectile("GWM_ShotgunIceShard", 0,0,0,0,0,invoker.icespread);
				A_FireProjectile("GWM_ShotgunIceShard", 0,0,0,0,0,-invoker.icespread);
				
				A_FireProjectile("GWM_ShotgunIceShard", invoker.icespread*0.8,0,0,0,0,invoker.icespread*0.8);
				A_FireProjectile("GWM_ShotgunIceShard", invoker.icespread*0.8,0,0,0,0,-invoker.icespread*0.8);
				A_FireProjectile("GWM_ShotgunIceShard", -invoker.icespread*0.8,0,0,0,0,invoker.icespread*0.8);
				A_FireProjectile("GWM_ShotgunIceShard", -invoker.icespread*0.8,0,0,0,0,-invoker.icespread*0.8);
				
				A_FireProjectile("GWM_ShotgunIceShard", invoker.icespread*0.5,0,0,0,0,0);
				A_FireProjectile("GWM_ShotgunIceShard", -invoker.icespread*0.5,0,0,0,0,0);
				A_FireProjectile("GWM_ShotgunIceShard", 0,0,0,0,0,invoker.icespread*0.5);
				A_FireProjectile("GWM_ShotgunIceShard", 0,0,0,0,0,-invoker.icespread*0.5);
				
				A_FireProjectile("GWM_ShotgunIceShard", invoker.icespread*0.3,0,0,0,0,invoker.icespread*0.3);
				A_FireProjectile("GWM_ShotgunIceShard", invoker.icespread*0.3,0,0,0,0,-invoker.icespread*0.3);
				A_FireProjectile("GWM_ShotgunIceShard", -invoker.icespread*0.3,0,0,0,0,invoker.icespread*0.3);
				A_FireProjectile("GWM_ShotgunIceShard", -invoker.icespread*0.3,0,0,0,0,-invoker.icespread*0.3);
				
				
				A_StartSound("weapons/iceshot", CHAN_WEAPON);
				A_SpawnItemEx("GWM_IceFlash");
				A_Overlay(-2, "Flash");
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_WeaponOffset(0, 20, WOF_ADD);
				A_OverlayScale(OverlayID(), 1.15, 0, WOF_INTERPOLATE);
			}
			ISHT A 3;
			ISHT A 1 {
				A_WeaponOffset(0, -10, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			ISHT AA 1;
			ISHT A 1 {
				A_WeaponOffset(0, -10, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			ISHT AA 1;
			Pump:
			TNT1 A 0 ZWL_CheckReload();
			ISHT B 5;
			ISHT C 4;
			ReleaseShells:
			TNT1 A 0 
			{
			ZWL_EjectCasing("GWM_IceShotgunCasing", offset: (24, -6, -14));
			A_TakeInventory("IceShotCharge",1);
			}
			TNT1 A 0 A_JumpifInventory("IceShotCharge",1,"ReleaseShells");
			ISHT D 5 {
				ZWL_EjectCasing("GWM_IceShotgunCasing", offset: (24, -6, -14));
				A_StartSound("weapons/icepump1", CHAN_BODY);
				A_StartSound("weapons/icehiss", CHAN_AUTO);
			}
			ISHT C 4;
			ISHT B 5 A_StartSound("weapons/icepump2", CHAN_BODY);
			ISHT A 3;
			ISHT A 7 A_ReFire;
			Goto Ready;
		
		
		Lv2Fire:
			ISHT A 1 {
				//ZWL_FireProjectile("GWM_ShotgunIce", 0);
				A_FireProjectile("GWM_ShotgunIceWallGenerator", 0,1,0,0,0,-5);
				A_FireProjectile("IceFog2", 0,1,0,0,0,-5);
				
				A_StartSound("weapons/iceshot", CHAN_WEAPON);
				A_SpawnItemEx("GWM_IceFlash");
				A_Overlay(-2, "Flash");
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.9, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.9, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.8, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.8, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_WeaponOffset(0, 20, WOF_ADD);
				A_OverlayScale(OverlayID(), 1.15, 0, WOF_INTERPOLATE);
			}
			ISHT A 3;
			ISHT A 1 {
				A_WeaponOffset(0, -10, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			ISHT AA 1;
			ISHT A 1 {
				A_WeaponOffset(0, -10, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			ISHT AA 3;
			TNT1 A 0 ZWL_CheckReload();
			goto Pump;
		
		
		Lv3Fire:
			ISHT A 1 {
				//ZWL_FireProjectile("GWM_ShotgunIce", 0);
				A_FireProjectile("GWM_ShotgunIceWallGenerator", 0,1,0,0,0,-5);
				A_FireProjectile("IceFog2", 0,1,0,0,0,-5);
				A_FireProjectile("IceFog2", 0,1,0,0,0,-5);
				
				A_StartSound("weapons/iceshot", CHAN_WEAPON);
				A_SpawnItemEx("GWM_IceFlash");
				A_Overlay(-2, "Flash");
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.9, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.9, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.8, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.8, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_WeaponOffset(0, 20, WOF_ADD);
				A_OverlayScale(OverlayID(), 1.15, 0, WOF_INTERPOLATE);
			}
			ISHT A 3;
			ISHT A 1 {
				A_WeaponOffset(0, -10, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			ISHT AA 1;
			ISHT A 1 {
				A_WeaponOffset(0, -10, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			ISHT AA 3;
			TNT1 A 0 ZWL_CheckReload();
			goto Pump;
		
		
		AltFire:
			ISHT B 5;
			ISHT C 4;
			ISHT D 5 
			{
				A_StartSound("weapons/icepump1", CHAN_BODY);
				A_StartSound("weapons/icehiss", CHAN_AUTO);
				if ( CountInv("IceShotCharge") < 2)
				{A_GiveInventory("IceShotCharge",1);}
				if ( CountInv("IceShotCharge") == 2)
				{A_TakeInventory("IceShotCharge",5);}
			}
			ISHT C 4;
			ISHT B 5 A_StartSound("weapons/icepump2", CHAN_BODY);
			ISHT A 3 A_Refire();
			Goto Ready;
	
		//OLD ALTFIREKICK	
			TNT1 A 0 {
				A_OverlayPivotAlign(OverlayID(), PSPA_RIGHT, PSPA_BOTTOM);
				A_OverlayPivot(OverlayID(), 0.5, 0.5, 0);
				A_OverlayScale(OverlayID(), 1, 0, WOF_INTERPOLATE);
				A_OverlayRotate(OverlayID(), 0, WOF_INTERPOLATE);
			}
			ISHT A 2 {
				A_Overlay(-2, "AltFireUnderlay");
				A_OverlayRotate(OverlayID(), 15, WOF_ADD);
			}
			ISHT A 2 {
				A_OverlayRotate(OverlayID(), 15, WOF_ADD);
			}
			ISHT A 4;
			ISHT A 5;
			ISHT AA 2 A_OverlayRotate(OverlayID(), -15, WOF_ADD);
			ISHT A 5 A_ReFire;
			Goto Ready;
		AltFireUnderlay:
			KICK A 4;
			KICK B 4 {
				// redo this shit later
				int dmg = 11;
				if (FindInventory("PowerStrength"))
				{
					dmg *= 10;
				}
				A_CustomPunch(dmg, norandom:true, range: meleeRange + 20, meleesound: "*fist");
			}
			KICK C 5;
			KICK B 4;
			KICK A 5;
			Stop;
		Flash:
			TNT1 A 0 A_OverlayOffset(OverlayID(), 159, 92);
			SGFL ABCCDE 1 Bright;
			Stop;
		Spawn:
			ISHT Z -1;
			Stop;
		Reload:
			TNT1 A 0 {
				if (!invoker.CheckAmmo(PrimaryFire, false, true))
					player.SetPSPrite(OverlayID(), ResolveState("Ready")); // Disallow reloading if there's no more ammo
			}
			ISHT B 5;
			ISHT C 4;
			ISHT D 2 {
				A_StartSound("weapons/icepump1", CHAN_BODY);
				A_StartSound("weapons/icehiss", CHAN_AUTO);
				ZWL_EjectCasing("GWM_IceShotgunCasing", offset: (24, -6, -14));
			}
			// Fallthrough
		Reload.Loop:
			ISHT EFG 2;
			TNT1 A 0 ZWL_Reload(1);
			ISHT HED 2;
			ISHT D 0 ZWL_JumpIfReloaded("Reload.End", true, true);
			Loop;
		Reload.End:
			ISHT C 4;
			ISHT B 5 A_StartSound("weapons/icepump2");
			Goto Ready;
	}
}
class GWM_ShotgunIce : GWM_IceProjectile
{
	Default
	{
		Radius 13;
		Height 13;
		Speed 50;
		DamageFunction (135);
		Scale 0.33;
		+THRUGHOST
		+RANDOMIZE
		+FORCEXYBILLBOARD
		DeathSound "weapons/icehit";
		Obituary "$KILLICESHOTGUN";
	}
	States
	{
		Spawn:
			SHGI A 6 Bright A_SpawnItemEx("GWM_ShotgunIceTrail");
			loop;
		Death:
			TNT1 A 1 {
				A_SpawnItemEx("GWM_ShotgunIceChunk", 0, 0, 0, -50, 0, 0, 10);
				A_SpawnItemEx("GWM_ShotgunIceChunk", 0, 0, 0, -50, 0, 5, 0);
				A_SpawnItemEx("GWM_ShotgunIceChunk", 0, 0, 0, -50, 0, 0, 0);
				A_SpawnItemEx("GWM_ShotgunIceChunk", 0, 0, 0, -50, 0, -5, 0);
				A_SpawnItemEx("GWM_ShotgunIceChunk", 0, 0, 0, -50, 0, 0, -10);
			}
			stop;
		XDeath:
			SHGI FBCDE 4 Bright;
//			TNT1 A 0 A_ScaleVelocity(0.50, AAPTR_TARGET);	// AAPTR_TARGET is the player, for some reason.
			Stop;
	}
}
class GWM_ShotgunIceChunk : GWM_ShotgunIce
{
	Default
	{
		Radius 7;
		Height 7;
		DamageFunction (10);
		BounceType "Doom";
		BounceCount 4;
	}
	States
	{
		Spawn:
			SHGI F 6 Bright A_SpawnItemEx("GWM_ShotgunIceTrail");
			loop;
		Death:
			SHGI BCDE 4 Bright;
			stop;
	}
}

class GWM_ShotgunIceShard : GWM_IceProjectile
{
	Default
	{
		Radius 13;
		Height 13;
		Speed 50;
		Damagefunction (8);
		Scale 0.25;
		+THRUGHOST;
		+FORCEXYBILLBOARD;
		BounceType "Hexen";
		BounceCount 10;
		DeathSound "weapons/icehit";
		Obituary "$KILLICESHOTGUN";
	}
	States
	{
		Spawn:
			SHGI A 6 Bright;// A_SpawnItemEx("GWM_ShotgunIceTrail");
			loop;
		Death:
			TNT1 A 5;
			stop;
		XDeath:
			SHGI FBCDE 4 Bright;
//			TNT1 A 0 A_ScaleVelocity(0.50, AAPTR_TARGET);	// AAPTR_TARGET is the player, for some reason.
			Stop;
	}
}

class GWM_ShotgunIceBomb : GWM_IceProjectile
{
	Default
	{
		Radius 13;
		Height 13;
		Speed 50;
		DamageFunction (35);
		Scale 0.33;
		+THRUGHOST
		+RANDOMIZE
		+FORCEXYBILLBOARD
		-Nogravity
		DeathSound "weapons/icehit";
		Obituary "$KILLICESHOTGUN";
	}
	int anglecount;
	States
	{
		Spawn:
			SHGI A 6 Bright A_SpawnItemEx("GWM_ShotgunIceTrail");
			loop;
		Death:
			TNT1 A 0 {
				A_SpawnItemEX("GWM_ShotgunIceShard",0,0,0,50,0,0,invoker.anglecount);
				A_SpawnItemEX("GWM_ShotgunIceShard",0,0,0,25,0,25,invoker.anglecount);
				invoker.anglecount = invoker.anglecount + 30;
				if (invoker.anglecount > 360)
				{
				SetStateLabel("XDeath");
				}
			}
			
			loop;
		XDeath:
			SHGI FBCDE 4 Bright;
//			TNT1 A 0 A_ScaleVelocity(0.50, AAPTR_TARGET);	// AAPTR_TARGET is the player, for some reason.
			Stop;
	}
}

class GWM_ShotgunIceTrail : Actor
{
	Default
	{
		Radius 13;
		Height 8;
		Speed 45; // parent - 5
		Projectile;
		+RANDOMIZE;
		RenderStyle "Add";
		Alpha 0.75;
	}
	States
	{
		Spawn:
			SHGI BCDE 6 Bright A_FadeOut(0.2);
			loop;
		Death:
			SHGI BCDE 4 Bright;
			stop;
	}
}

class GWM_ShotgunIceWallGenerator : GWM_IceProjectile
{
	Default
	{
		Radius 3;
		Height 3;
		Speed 80;
		DamageFunction (35);
		Scale 0.33;
		+THRUGHOST
		+RANDOMIZE
		+FORCEXYBILLBOARD
		-Nogravity
		DeathSound "weapons/icehit";
		Obituary "$KILLICESHOTGUN";
	}
	int anglecount;
	States
	{
		Spawn:
			SHGI A 6 Bright A_SpawnItemEx("GWM_ShotgunIceTrail");
			loop;
		Death:
			TNT1 A 5 
			{
			A_SpawnItemEX("IceWallColumn",0,-22.5,00);
			A_SpawnItemEX("IceWallColumn",0,-7.5,00);
			A_SpawnItemEX("IceWallColumn",0,7.5,00);
			A_SpawnItemEX("IceWallColumn",0,22.5,00);
			A_SpawnItemEX("IceWallColumn",15,-22.5,00);
			A_SpawnItemEX("IceWallColumn",15,-7.5,00);
			A_SpawnItemEX("IceWallColumn",15,7.5,00);
			A_SpawnItemEX("IceWallColumn",15,22.5,00);
			}
			TNT1 A 5 
			{
			A_SpawnItemEX("IceWallColumn",0,-22.5,20);
			A_SpawnItemEX("IceWallColumn",0,-7.5,20);
			A_SpawnItemEX("IceWallColumn",0,7.5,20);
			A_SpawnItemEX("IceWallColumn",0,22.5,20);
			A_SpawnItemEX("IceWallColumn",15,-22.5,20);
			A_SpawnItemEX("IceWallColumn",15,-7.5,20);
			A_SpawnItemEX("IceWallColumn",15,7.5,20);
			A_SpawnItemEX("IceWallColumn",15,22.5,20);
			}
			TNT1 A 5 
			{
			A_SpawnItemEX("IceWallColumn",0,-22.5,40);
			A_SpawnItemEX("IceWallColumn",0,-7.5,40);
			A_SpawnItemEX("IceWallColumn",0,7.5,40);
			A_SpawnItemEX("IceWallColumn",0,22.5,40);
			A_SpawnItemEX("IceWallColumn",15,-22.5,40);
			A_SpawnItemEX("IceWallColumn",15,-7.5,40);
			A_SpawnItemEX("IceWallColumn",15,7.5,40);
			A_SpawnItemEX("IceWallColumn",15,22.5,40);
			}
			TNT1 A 5 
			{
			A_SpawnItemEX("IceWallColumn",0,-22.5,60);
			A_SpawnItemEX("IceWallColumn",0,-7.5,60);
			A_SpawnItemEX("IceWallColumn",0,7.5,60);
			A_SpawnItemEX("IceWallColumn",0,22.5,60);
			A_SpawnItemEX("IceWallColumn",15,-22.5,60);
			A_SpawnItemEX("IceWallColumn",15,-7.5,60);
			A_SpawnItemEX("IceWallColumn",15,7.5,60);
			A_SpawnItemEX("IceWallColumn",15,22.5,60);
			}
			stop;
		XDeath:
			SHGI FBCDE 4 Bright;
			Stop;
	}
}
class IceWallColumn : Actor
{
	Default
	{
		Radius 15;
		Height 20;
		Alpha 0.7;
		Health 200;
		Scale 0;
		+NoDamage;
		+SHOOTABLE;
		+NOGRAVITY;
		Renderstyle "Translucent";
	}
	States
	{
		Spawn:
			TNT1 A 0 A_SetScale(1,0);
			ICWL AAAAA 1 
			{
			A_Radiusgive("IceWallPushup",15,RGF_PLAYERS|RGF_MONSTERS,1);
			A_SetScale(1,scaley+0.2);
			}
			
			Spawny:
			TNT1 A 0 A_ChangeFlag("NODamage",false);
			TNT1 A 0 A_ChangeFlag("Solid",true);
			TNT1 A 0 A_JumpifHealthLower(50,"Spawn4");
			TNT1 A 0 A_JumpifHealthLower(100,"Spawn3");
			TNT1 A 0 A_JumpifHealthLower(150,"Spawn2");
			ICWL A 1 Bright;
			loop;
			Spawn2:
			ICWL B 1 Bright;
			goto Spawny;
			Spawn3:
			ICWL C 1 Bright;
			goto Spawny;
			Spawn4:
			ICWL D 1 Bright;
			goto Spawny;
			
		Death:
			SHGI BCDE 4 Bright;
			stop;
	}
}

class IceWallPushup : CustomInventory
{
States
{
Pickup:
TNT1 A 0 nodelay A_Changevelocity(momx,momy,4,CVF_REPLACE);
stop;
}
}