Class GWM_KahunaSpread : Inventory { Default {Inventory.Maxamount 24;}}

class GWM_SlayersKahuna : GWM_WeaponBase
{
	int kahunaspread;
	Default
	{
		//$Category Weapons
		//$Title ""Slayer's Kahuna" Shotgun
		Weapon.SelectionOrder 1300;
		Inventory.PickupSound "weapons/skpickup";
		Weapon.UpSound "weapons/draw_secondary";
		Weapon.AmmoType "GWM_Shell";
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 9;

		ZWeapon.MagazineSize 8;
		ZWeapon.ReloadSound "weapons/shell_load";
		ZWeapon.ClickSound "weapons/skempty";

		GWM_WeaponBase.BaseVersion "GWM_ZombieShotgun";
		Tag "$TAG_SLAYERSKAHUNA";
		Inventory.PickupMessage "$GOTSLAYERSKAHUNA";
		Obituary "$KILLSLAYERSKAHUNA";
		AttackSound "weapons/skshot";
	}
	States
	{
		Ready:
			SKSG AAAA 1 ZWL_WeaponReady(ZRF_ExtraRound);
			Loop;
		Select:
			TNT1 A 0 {
				ZWL_QuickRaise();
				A_WeaponOffset(64, 160);
			}
			SKSG NNNNNN 1 {
				A_WeaponOffset(-8, -16, WOF_ADD);
			}
			SKSG AA 1 {
				A_WeaponOffset(-8, -16, WOF_ADD);
			}
			SKSG H 4 {A_StartSound("weapons/skpump1"); ZWL_WeaponReady(ZRF_ExtraRound);}
			SKSG GGFF 1 ZWL_WeaponReady(ZRF_ExtraRound);
			SKSG A 1 {A_StartSound("weapons/skpump2"); ZWL_WeaponReady(ZRF_ExtraRound);}
			Goto Ready;
		Deselect:
			SKSG AA 1 {
				A_WeaponOffset(8, 16, WOF_ADD);
			}
			SKSG NNNNNN 1 {
				A_WeaponOffset(8, 16, WOF_ADD);
			}
			TNT1 A 0 A_WeaponOffset(0, flags: WOF_KEEPY);
			TNT1 A 0 ZWL_QuickLower;
			Stop;
/*		Deselect:
			SKSG A 1 A_Lower(18);
			Loop;
		Select:
			SKSG A 1 A_Raise(18);
			Loop;*/
		Recoil:
			TNT1 AA 1 A_SetPitch(pitch+0.80);
			TNT1 AAAAAA 1 A_SetPitch(pitch-0.40);
			Stop;
		Fire:
			SKSG A 1 Bright {
				A_OverlayPivotAlign(OverlayID(), PSPA_CENTER, PSPA_BOTTOM);
				A_OverlayPivot(OverlayID(), 0.2, flags: WOF_KEEPY);
				ZWL_FireHitscan(0, 10, pellets: 12, spread: 6, tracerType: "GWM_Tracer");
				A_ChangeVelocity(-Cos(pitch)*2, 0, sin(pitch)*2,CVF_RELATIVE);
				A_SpawnItemEx("GWM_Flash");
				A_SpawnItemEx("GWM_MuzzleFlashLight2",0,0,5);
				A_GunFlash();
				A_WeaponOffset(0, 42, WOF_INTERPOLATE);
				A_OverlayScale(OverlayID(), 1.15, 0, WOF_INTERPOLATE);
				A_QuakeEx(1.5, 1.5, 1.5, 4, 0, 1, "", QF_SHAKEONLY);
			}
			SKSG A 2 Bright;
			SKSG A 1 Bright {
				A_WeaponOffset(0, -5, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			SKSG AA 1 Bright;
			SKSG A 1 {
				A_WeaponOffset(0, -5, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			TNT1 A 0 ZWL_CheckReload();
			SKSG B 5;
			SKSG CCCDD 1;
			SKSG E 4 {
				A_StartSound("weapons/skpump1");
				ZWL_EjectCasing("GWM_ShotgunCasing", offset: (24, -6, -14));
			}
			SKSG DDCCC 1; // These two play on CHAN_BODY because the firing sound is just too fucking long
			SKSG B 5 A_StartSound("weapons/skpump2");
			SKSG A 3;
			SKSG A 0 ZWL_ReFire();
			Goto Ready;
		AltFire:
			TNT1 A 0 {
				if (!invoker.DepleteAmmo(false, true))
				{
					A_PlaySound(invoker.clickSound, CHAN_Auto);
					player.SetPSPrite(OverlayID(), ResolveState("Ready")); // Weird, fucked-up way of making it click instead.
				}
			}
			SKSG A 1 Bright {
				A_Overlay(55, "Recoil");
				A_OverlayPivotAlign(OverlayID(), PSPA_CENTER, PSPA_BOTTOM);
				A_OverlayPivot(OverlayID(), 0.2, flags: WOF_KEEPY);
				ZWL_FireHitscan(0, 11, pellets: 12, spread: 4+(Countinv("GWM_KahunaSpread")*0.7), tracerType: "GWM_Tracer");
				A_ChangeVelocity(-Cos(pitch)*2.5, 0, sin(pitch)*2.5,CVF_RELATIVE);
				A_SpawnItemEx("GWM_Flash");
				A_SpawnItemEx("GWM_MuzzleFlashLight2",0,0,5);
				A_GunFlash("Flash2");
				A_WeaponOffset(0, 52, WOF_INTERPOLATE);
				A_OverlayScale(OverlayID(), 1.30, 0, WOF_INTERPOLATE);
				A_QuakeEx(1.5, 1.5, 1.5, 4, 0, 1, "", QF_SHAKEONLY);
				A_GiveInventory("GWM_KahunaSpread",2);
			}
			SKSG A 3 Bright;
			SKSG A 1 Bright {
				A_WeaponOffset(0, -10, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.15, 0, WOF_ADD);
			}
			SKSG AA 1 Bright;
			SKSG A 1 {
				A_WeaponOffset(0, -10, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.15, 0, WOF_ADD);
			}
			TNT1 A 0 ZWL_CheckReload();
			SKSG FFGG 1;
			TNT1 A 0 {ZWL_EjectCasing("GWM_ShotgunCasing", offset: (20, 4, -14));}
			SKSG A 0 ZWL_ReFire();
			// G: wh-
			// G: okay, i guess
			// M: OLD CODE
			SKSG H 4 {
				A_StartSound("weapons/skpump1");
				ZWL_EjectCasing("GWM_ShotgunCasing", offset: (20, 4, -14));
			}
			SKSG GGFF 1; // These two play on CHAN_BODY because the firing sound is just too fucking long
			SKSG A 5 A_StartSound("weapons/skpump2");
			SKSG A 0 ZWL_ReFire();
			Goto Ready;
		Spawn:
			SKSG Z -1;
			Stop;
		Flash:
			SKSF A 1 Bright {
				A_OverlayPivotAlign(OverlayID(), PSPA_CENTER, PSPA_BOTTOM);
				A_OverlayPivot(OverlayID(), 0.2, flags: WOF_KEEPY);
				A_Light1();
				A_OverlayScale(OverlayID(), 1.15, 0, WOF_INTERPOLATE);
			}
			SKSF A 2 Bright A_Light1;
			SKSF B 3 Bright {
				A_Light2();
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			Goto LightDone;
		Flash2:
			SKSF A 1 Bright {
				A_OverlayPivotAlign(OverlayID(), PSPA_CENTER, PSPA_BOTTOM);
				A_OverlayPivot(OverlayID(), 0.2, flags: WOF_KEEPY);
				A_Light1();
				A_OverlayScale(OverlayID(), 1.30, 0, WOF_INTERPOLATE);
			}
			SKSF A 3 Bright A_Light1;
			SKSF B 3 Bright {
				A_Light2();
				A_OverlayScale(OverlayID(), -0.15, 0, WOF_ADD);
			}
			Goto LightDone;
		Reload:
			TNT1 A 0 {
				if (!invoker.CheckAmmo(PrimaryFire, false, true))
					player.SetPSPrite(OverlayID(), ResolveState("Ready")); // Disallow reloading if there's no more ammo
			}
			SKSG B 5;
			SKSG CCCDD 1;
			SKSG E 2 A_StartSound("weapons/skpump1");
			// Fallthrough
		Reload.Loop:
			SKSG IJK 2;
			TNT1 A 0 ZWL_Reload(1);
			SKSG LM 2;
			SKSG E 0 ZWL_JumpIfReloaded("Reload.End", true, true);
			Loop;
		Reload.End:
			SKSG DDCCC 1;
			SKSG B 5 A_StartSound("weapons/skpump2");
			Goto Ready;
	}
}