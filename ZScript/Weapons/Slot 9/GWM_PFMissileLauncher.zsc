class GWM_PFMissileLauncher : GWM_WeaponBase
{
	bool PFShotDirected;
	array <Actor> projs;
	action void A_FireFrozenProjectiles() {
		if (!invoker.PFShotDirected)
		{
			double atkheight = height * 0.5 - floorclip + player.mo.AttackZOffset*player.crouchFactor;
			// fire linetrace:
			FlineTraceData trc;
			LineTrace(angle, 4096, pitch, TRF_SOLIDACTORS, atkheight, data: trc);
			// record the point that your linetrace hit:
			Vector3 pTargetPos = trc.HitLocation;

			for (int i = 0; i < invoker.projs.Size(); i++) {
				let proj = invoker.projs[i];
				// do nothing if the pointer is invalid, or
				// the projectile still has the RIPPER flag:
				if (!proj || proj.bRIPPER) {
					continue;
				}
				// otherwise...

				// get a vector from projectile's position to target position:
				vector3 diff = LevelLocals.Vec3Diff(proj.pos, pTargetPos);
				// normalize that vector (this converts it into a direction):
				vector3 dir = diff.unit(); 

				// make the projectile fly towards the target point with
				// its speed value:
				proj.vel = proj.speed * dir;
				
				//invoker.PFShotDirected = true;
				//invoker.PFCooldown = 0;
				A_StartSound("weapons/ok00"); // play noise
			}

			// clear the array:
			invoker.projs.Clear();
		}
	}
	Default
	{
		//$Category Weapons
		//$Title "P.F. Missile Launcher
		Weapon.SlotNumber 9;
		Weapon.SelectionOrder 2500; // Don't blow yourself up!!
		Weapon.UpSound "weapons/draw_primary";
		Weapon.AmmoUse 4;
		Weapon.AmmoGive 8;
		Weapon.AmmoType "GWM_IceShell";
		+WEAPON.NOAUTOFIRE
		Inventory.PickupMessage "$GOTPFMISSILELAUNCHER";
		Tag "$TAG_PFMISSILELAUNCHER";
	}
	States
	{
		Ready:
			PFMG A 1 A_WeaponReady;
			Loop;
		Deselect:
			PFMG A 1 A_Lower(18);
			Loop;
		Select:
			PFMG A 1 A_Raise(18);
			Loop;
		Fire:
			PFMG A 2 {
				A_OverlayPivot(OverlayID(), 0.50, 1);
				A_Overlay(-2, "Flash");
				A_SpawnItemEx("GWM_Flash");
				A_WeaponOffset(0, 18, WOF_ADD);
				A_StartSound("weapons/pfshot", CHAN_WEAPON);
				A_FireProjectile("GWM_PerfectFreezeMissile");
				A_OverlayScale(OverlayID(), 0.11, 0, WOF_ADD);
			}
			PFMG AA 2 A_OverlayScale(OverlayID(), 0.11, 0, WOF_ADD);
			PFMG A 5;
			PFMG AAA 3 {
				A_WeaponOffset(0, -6, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.11, 0, WOF_ADD);
			}
			RTKL A 0 A_ReFire;
			Goto Ready;
		Flash:
			RKTF ABC 2 Bright {
				A_OverlayTranslation(OverlayID(), "Ice");
				A_Light1();
				A_OverlayPivot(OverlayID(), 0.66, 1);
				A_OverlayScale(OverlayID(), 0.11, 0, WOF_ADD);
			}
			RKTF DE 2 Bright A_Light2;
			Stop;
		Spawn:
			PFMG Z -1;
			Stop;
	}
}

class GWM_PerfectFreezeMissile : GWM_IceProjectile
{
	Default
	{
		Radius 11;
		Height 8;
		Speed 30; // faster.
		DamageFunction (64);
		ExplosionDamage 32;
		+RANDOMIZE
		+THRUGHOST
		SeeSound "";
		DeathSound "weapons/explode";
		Obituary "$OB_PHOTONMISSILE";
	}
	States
	{
		Spawn:
			PMIS DDEEFF 1 Bright A_SpawnItemEx("IceFog4", -20);
			Loop;
		Death:
			TNT1 A 0 A_SpawnItemEx("GWM_PFShell", -16);
			Goto Explode;
		XDeath:
			TNT1 A 0 A_SpawnItemEx("GWM_PFShell", -32);
			Goto Explode;
		Explode:
			TNT1 A 0 {
				A_SpawnItemEx("GWM_IceMissileBlast");
				A_Explode();
			}
			Stop;
	}
}
class GWM_PerfectFreezeBullet : GWM_IceProjectile
{
	action State PerfectFreezeTimerJump()
	{
		if (GetAge() == 2*35 || target == null) 
		{
			A_StartSound("weapons/power1");
			A_Stop();
			return ResolveState("White");
		}
		if (GetAge() >= 4*35 && GetAge() <= 4.25*35)
		{
			bSEEKERMISSILE = true;
			A_SeekerMissile(0, 90, SMF_LOOK);
		}
		if (GetAge() > 4.25*35)
		{
			A_SeekerMissile(0, 2, SMF_LOOK);
		}
		if (GetAge() >= 32*35 || target == null) {A_FadeOut();}
		
		return State(null);
	}
	Default
	{
		Radius 16;
		Height 16;
		Speed 20;
		DamageFunction (9); // lol
		Projectile;
		+RIPPER
		+FORCEXYBILLBOARD
		+NOBLOCKMAP
		+NOGRAVITY
		+THRUGHOST
		DamageType "Ice";
		+ICESHATTER;
		BounceType "Doom";
		DeathSound "weapons/pfgraze";
		RipSound "weapons/pfdamage";
		Bouncecount 6;
	}
	States
	{
		Spawn:
			PFBU F 1 Bright A_Jump(256, "Red", "Blue", "Green", "Yellow", "Orange");
			Loop;
		Red:
			PFBU A 1 Bright PerfectFreezeTimerJump;
			Loop;
		Blue:
			PFBU B 1 Bright PerfectFreezeTimerJump;
			Loop;
		Green:
			PFBU C 1 Bright PerfectFreezeTimerJump;
			Loop;
		Yellow:
			PFBU D 1 Bright PerfectFreezeTimerJump;
			Loop;
		Orange:
			PFBU E 1 Bright PerfectFreezeTimerJump;
			Loop;
		White:
			PFBU F 1 Bright {
				bRIPPER = false;
				bBOUNCEONWALLS = false;
				bBOUNCEONFLOORS = false;
				bBOUNCEONCEILINGS = false;
				bBOUNCEAUTOOFFFLOORONLY = false;
				PerfectFreezeTimerJump();
			}
			Loop;
		Death:
			PFBU F 1 Bright A_FadeOut(0.1);
			Loop;
	}
}

class GWM_PFShell : ZShell
{
	Default
	{
		ZShell.pelletType "GWM_PerfectFreezeBullet";
		ZShell.pelletCount 20;
		ZShell.spread 7.5;
	}
}

class GWM_IceMissileBlast : Actor
{
	Default
	{
		+NoInteraction
	}

	States
	{
	Spawn:
		TNT1 A 1 nodelay A_SpawnItemEX("ShakeItBaby",0,0,5);
		TNT1 AA 1
		{
		A_SpawnItemEX("IceFog4",frandom(-15,15),frandom(-15,15),frandom(2,45),frandom(-4,4),frandom(-4,4),frandom(-4,4),frandom(1,359));
		A_SpawnItemEX("IceFog4",frandom(-15,15),frandom(-15,15),frandom(2,45),frandom(-4,4),frandom(-4,4),frandom(-4,4),frandom(1,359));
		A_SpawnItemEX("IceFog4",frandom(-15,15),frandom(-15,15),frandom(2,45),frandom(-4,4),frandom(-4,4),frandom(-4,4),frandom(1,359));
		A_SpawnItemEX("IceFog3",frandom(-15,15),frandom(-15,15),frandom(2,45),frandom(-12,12),frandom(-12,12),frandom(-12,12),frandom(1,359));
		A_SpawnItemEX("IceFog3",frandom(-15,15),frandom(-15,15),frandom(2,45),frandom(-12,12),frandom(-12,12),frandom(-12,12),frandom(1,359));
		A_SpawnItemEX("IceFog3",frandom(-15,15),frandom(-15,15),frandom(2,45),frandom(-12,12),frandom(-12,12),frandom(-12,12),frandom(1,359));
		A_SpawnItemEX("IceFog3",frandom(-15,15),frandom(-15,15),frandom(2,45),frandom(-12,12),frandom(-12,12),frandom(-12,12),frandom(1,359));
		}
		stop;
	}
}