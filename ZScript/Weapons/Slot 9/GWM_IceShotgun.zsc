class GWM_IceShotgun : GWM_WeaponBase
{
	int icespread;
	Default
	{
		//$Category Weapons
		//$Title "Ice Shotgun
		Weapon.SelectionOrder 1300;
		Weapon.SlotNumber 9;
		Inventory.PickupSound "weapons/icepickup";
		Weapon.UpSound "weapons/draw_secondary";
		Weapon.AmmoType "GWM_IceShell";
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 6;

		ZWeapon.ClickSound "weapons/skempty";
		ZWeapon.MaxCharge 30;

		Tag "$TAG_ICESHOTGUN";
		Inventory.PickupMessage "$GOTICESHOTGUN";
		Obituary "$KILLICESHOTGUN";
	}
	States
	{
		Ready:
			ISHT A 1 ZWL_WeaponReady();
			Loop;
		Select:
			TNT1 A 0 {
				ZWL_QuickRaise();
				A_WeaponOffset(64, 160);
			}
			ISHT FFFFFF 1 {
				A_WeaponOffset(-8, -16, WOF_ADD);
			}
			ISHT AA 1 {
				A_WeaponOffset(-8, -16, WOF_ADD);
			}
			Goto Ready;
		Deselect:
			ISHT AA 1 {
				A_WeaponOffset(8, 16, WOF_ADD);
			}
			ISHT FFFFFF 1 {
				A_WeaponOffset(8, 16, WOF_ADD);
			}
			TNT1 A 0 A_WeaponOffset(0, flags: WOF_KEEPY);
			TNT1 A 0 ZWL_QuickLower;
			Stop;
/*		Deselect:
			ISHT A 1 A_Lower(18);
			Loop;
		Select:
			ISHT A 1 A_Raise(18);
			Loop;*/
		Lv1Fire:
			TNT1 A 0 {
				if (!invoker.CheckMagazine(false))
				{
					invoker.chargeLevel = 0; // make sure it's reset if we are reloading
					A_PlaySound(invoker.clickSound, CHAN_Auto);
					player.SetPSPrite(OverlayID(), ResolveState("Ready")); // Disallow reloading if there's no more ammo
					return;
				}
				invoker.Ammo1.Amount -= 1;
			}
		Fire:
			TNT1 A 0 {
				A_OverlayPivot(OverlayID(), 0.2, 0.5, 0);
				A_OverlayPivotAlign(OverlayID(), PSPA_CENTER, PSPA_BOTTOM);
				A_OverlayScale(OverlayID(), 1, 0, WOF_INTERPOLATE);
				A_OverlayRotate(OverlayID(), 0, WOF_INTERPOLATE);
				A_WeaponOffset(0, 32, WOF_INTERPOLATE);
			}
			ISHT A 1 {
				//ZWL_FireProjectile("GWM_ShotgunIce", 0);
				invoker.icespread = 5;

				A_FireProjectile("GWM_ShotgunIceShard", 0,1,0,0,0,0);
				A_StartSound("weapons/iceshot", CHAN_WEAPON);
				A_SpawnItemEx("GWM_IceFlash");
				A_Overlay(-2, "Flash");
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_WeaponOffset(0, 20, WOF_ADD);
				A_OverlayScale(OverlayID(), 1.15, 0, WOF_INTERPOLATE);
			}
			ISHT A 1 {
				A_FireProjectile("GWM_ShotgunIceShard", invoker.icespread*0.3,0,0,0,0,invoker.icespread*0.3);
				A_FireProjectile("GWM_ShotgunIceShard", invoker.icespread*0.3,0,0,0,0,-invoker.icespread*0.3);
				A_FireProjectile("GWM_ShotgunIceShard", -invoker.icespread*0.3,0,0,0,0,invoker.icespread*0.3);
				A_FireProjectile("GWM_ShotgunIceShard", -invoker.icespread*0.3,0,0,0,0,-invoker.icespread*0.3);

				A_FireProjectile("GWM_ShotgunIceShard", invoker.icespread*0.5,0,0,0,0,0);
				A_FireProjectile("GWM_ShotgunIceShard", -invoker.icespread*0.5,0,0,0,0,0);
				A_FireProjectile("GWM_ShotgunIceShard", 0,0,0,0,0,invoker.icespread*0.5);
				A_FireProjectile("GWM_ShotgunIceShard", 0,0,0,0,0,-invoker.icespread*0.5);
			}
			ISHT A 1 {
				A_FireProjectile("GWM_ShotgunIceShard", invoker.icespread*0.8,0,0,0,0,invoker.icespread*0.8);
				A_FireProjectile("GWM_ShotgunIceShard", invoker.icespread*0.8,0,0,0,0,-invoker.icespread*0.8);
				A_FireProjectile("GWM_ShotgunIceShard", -invoker.icespread*0.8,0,0,0,0,invoker.icespread*0.8);
				A_FireProjectile("GWM_ShotgunIceShard", -invoker.icespread*0.8,0,0,0,0,-invoker.icespread*0.8);

				A_FireProjectile("GWM_ShotgunIceShard", invoker.icespread,0,0,0,0,0);
				A_FireProjectile("GWM_ShotgunIceShard", -invoker.icespread,0,0,0,0,0);
				A_FireProjectile("GWM_ShotgunIceShard", 0,0,0,0,0,invoker.icespread);
				A_FireProjectile("GWM_ShotgunIceShard", 0,0,0,0,0,-invoker.icespread);
			}
			ISHT A 3;
			ISHT A 1 {
				A_WeaponOffset(0, -10, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			ISHT AA 1;
			ISHT A 1 {
				A_WeaponOffset(0, -10, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			ISHT AA 1;
			TNT1 A 0 ZWL_CheckReload();
		Pump:
			ISHT B 5;
			ISHT CD 2;
			TNT1 A 0
			{
				if (invoker.chargeLevel >= 20)
					ZWL_EjectCasing("GWM_IceShotgunCasing", offset: (24, -6, -14));
				if (invoker.chargeLevel >= 10)
					ZWL_EjectCasing("GWM_IceShotgunCasing", offset: (24, -6, -14));
				invoker.chargeLevel = 0;
			}
			ISHT E 5 {
				ZWL_EjectCasing("GWM_IceShotgunCasing", offset: (24, -6, -14));
				A_StartSound("weapons/icepump1", CHAN_BODY);
				A_StartSound("weapons/icehiss", CHAN_AUTO);
			}
			ISHT DC 2;
			ISHT B 5 A_StartSound("weapons/icepump2", CHAN_BODY);
			ISHT A 3;
			ISHT A 7 A_ReFire;
			Goto Ready;
		Lv2Fire:
			TNT1 A 0 {
				A_OverlayPivot(OverlayID(), 0.2, 0.5, 0);
				A_OverlayPivotAlign(OverlayID(), PSPA_CENTER, PSPA_BOTTOM);
				A_OverlayScale(OverlayID(), 1, 0, WOF_INTERPOLATE);
				A_OverlayRotate(OverlayID(), 0, WOF_INTERPOLATE);
				A_WeaponOffset(0, 32, WOF_INTERPOLATE);
				invoker.Ammo1.Amount -= 2;
			}
			ISHT A 1 {
				//ZWL_FireProjectile("GWM_ShotgunIce", 0);
				A_FireProjectile("GWM_ShotgunIceBomb", 0,1,0,0,0,-5);
				A_FireProjectile("IceFog2", 0,1,0,0,0,-5);

				A_StartSound("weapons/iceshot", CHAN_WEAPON);
				A_SpawnItemEx("GWM_IceFlash");
				A_Overlay(-2, "Flash");
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.9, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.9, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.8, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.8, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_WeaponOffset(0, 20, WOF_ADD);
				A_OverlayScale(OverlayID(), 1.15, 0, WOF_INTERPOLATE);
			}
			ISHT A 3;
			ISHT A 1 {
				A_WeaponOffset(0, -10, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			ISHT AA 1;
			ISHT A 1 {
				A_WeaponOffset(0, -10, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			ISHT AA 3;
			TNT1 A 0 ZWL_CheckReload();
			goto Pump;
		Lv3Fire:
			TNT1 A 0 {
				A_OverlayPivot(OverlayID(), 0.2, 0.5, 0);
				A_OverlayPivotAlign(OverlayID(), PSPA_CENTER, PSPA_BOTTOM);
				A_OverlayScale(OverlayID(), 1, 0, WOF_INTERPOLATE);
				A_OverlayRotate(OverlayID(), 0, WOF_INTERPOLATE);
				A_WeaponOffset(0, 32, WOF_INTERPOLATE);
				invoker.Ammo1.Amount -= 3;
			}
			ISHT A 1 {
				//ZWL_FireProjectile("GWM_ShotgunIce", 0);
				A_FireProjectile("GWM_ShotgunIceWallGenerator", 0,1,0,0,0,-5);
				A_FireProjectile("IceFog2", 0,1,0,0,0,-5);
				A_FireProjectile("IceFog2", 0,1,0,0,0,-5);

				A_StartSound("weapons/iceshot", CHAN_WEAPON);
				A_SpawnItemEx("GWM_IceFlash");
				A_Overlay(-2, "Flash");
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.9, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.9, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.8, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_SpawnItemEx("IceFog2", 24, 0, 32, 0.8, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				A_WeaponOffset(0, 20, WOF_ADD);
				A_OverlayScale(OverlayID(), 1.15, 0, WOF_INTERPOLATE);
			}
			ISHT A 3;
			ISHT A 1 {
				A_WeaponOffset(0, -10, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			ISHT AA 1;
			ISHT A 1 {
				A_WeaponOffset(0, -10, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.075, 0, WOF_ADD);
			}
			ISHT AA 3;
			TNT1 A 0 ZWL_CheckReload();
			goto Pump;
		AltFire:
			TNT1 A 0 A_StartSound("weapons/icechrg", CHAN_WEAPON);
		AltHold:
			ISHT A 2
			{
				A_WeaponOffset(0+frandom(-0.4,0.4)*invoker.chargeLevel, 32+frandom(0,0.8)*invoker.chargeLevel, WOF_INTERPOLATE);	// G: edited the second frandom call to not allow edges of the weapon to be seen
				A_SpawnItemEx("IceFog", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));

				switch(invoker.chargeLevel)
				{
					case 10:
						A_StartSound("weapons/icelv2", CHAN_BODY);
						break;
					case 20:
						A_StartSound("weapons/icelv3", CHAN_BODY);
						break;
				}
				if (invoker.chargeLevel >= 0)
					A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				if (invoker.chargeLevel >= 10)
					A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
				if (invoker.chargeLevel >= 20)
					A_SpawnItemEx("IceFog2", 24, 0, 32, 0.5, 0, FRandom(-0.5, 0.5), Random(-12, 12));
			}
			ISHT A 0
			{
				if (invoker.chargeLevel < 10 && invoker.Ammo1.Amount < 2)
					A_Refire();
				if (invoker.chargeLevel > 10 && invoker.Ammo1.Amount < 3)
					A_Refire();
			}
			ISHT A 0 ZWL_Charge();
			ISHT A 0 A_Refire();
			ISHT A 0 A_Jumpif(invoker.chargeLevel >= 20, "Lv3Fire");
			ISHT A 0 A_Jumpif(invoker.chargeLevel >= 10, "Lv2Fire");
			ISHT A 0 A_Jumpif(invoker.chargeLevel >= 0, "Lv1Fire");
			Goto AltFire;
		Flash:
			TNT1 A 0 A_OverlayOffset(OverlayID(), 159, 92);
			SGFL ABCCDE 1 Bright;
			Stop;
		Spawn:
			ISHT Z -1;
			Stop;
	}
}

class GWM_ShotgunIceShard : GWM_IceProjectile
{
	Default
	{
		Radius 13;
		Height 13;
		Speed 50;
		Damagefunction (6);
		Scale 0.25;
		+THRUGHOST;
		+FORCEXYBILLBOARD;
		-Nogravity;
		Gravity 0.3;
		BounceType "Hexen";
		BounceCount 3;
		DeathSound "weapons/icehit";
		Obituary "$KILLICESHOTGUN";
		Renderstyle "Add";
		Damagetype "Ice";
		GWM_IceProjectile.IceSlowCount 50;
	}
	States
	{
		Spawn:
			SHGI A 1 Bright
			{
			A_SpawnItemEx("IceFog2", vel.x*frandom(-1,-0.4), 0, vel.z*frandom(-1,-0.4), FRandom(-0.5, 0.5), FRandom(-0.5, 0.5), FRandom(-0.5, 0.5));
			A_SpawnItemEx("IceFog2", vel.x*frandom(-1,-0.4), 0, vel.z*frandom(-1,-0.4), FRandom(-0.5, 0.5), FRandom(-0.5, 0.5), FRandom(-0.5, 0.5));
			A_SpawnItemEx("IceFog2", vel.x*frandom(-1,-0.4), 0, vel.z*frandom(-1,-0.4), FRandom(-0.5, 0.5), FRandom(-0.5, 0.5), FRandom(-0.5, 0.5));
			}
			loop;
		Death:
		XDeath:
			TNT1 AAAA 0 A_SpawnItemEX("StatusIceChunk",0,0,0,frandom(-4,4),frandom(-4,4),frandom(-1,6));
			SHGI FBCDE 4 Bright;
//			TNT1 A 0 A_ScaleVelocity(0.50, AAPTR_TARGET);	// AAPTR_TARGET is the player, for some reason.
			Stop;
	}
}

class GWM_ShotgunIceBomb : GWM_IceProjectile
{
	Default
	{
		Radius 23;
		Height 23;
		Speed 50;
		DamageFunction (53);
		Scale 0.33;
		+THRUGHOST
		+RANDOMIZE
		+FORCEXYBILLBOARD
		-Nogravity
		DeathSound "weapons/icehit";
		Obituary "$KILLICESHOTGUN";
		Damagetype "Ice";
		GWM_IceProjectile.IceSlowCount 75;
	}
	int anglecount;
	States
	{
		Spawn:
			SHGI A 6 Bright A_SpawnItemEx("GWM_ShotgunIceTrail");
			loop;
		Death:
			TNT1 A 0 {
				A_SpawnProjectile("GWM_ShotgunIceShard",0,0,invoker.anglecount,CMF_ABSOLUTEPITCH ,30);
				A_SpawnProjectile("GWM_ShotgunIceShard",0,0,invoker.anglecount,CMF_ABSOLUTEPITCH ,60);
				A_SpawnProjectile("GWM_ShotgunIceShard",0,0,invoker.anglecount,CMF_ABSOLUTEPITCH ,-30);
				A_SpawnProjectile("GWM_ShotgunIceShard",0,0,invoker.anglecount,CMF_ABSOLUTEPITCH ,-60);

				invoker.anglecount = invoker.anglecount + 30;
				if (invoker.anglecount > 360)
				{


				SetStateLabel("Fog");
				}
			}

			loop;
			XDeath:
			Fog:
			TNT1 AAAAAAAAAAAAAAA 0
			{
			A_SpawnItemEx("IceFog3", 0, 0, 5, FRandom(3, 6), FRandom(3, 6), FRandom(3, 6),random(0,360));
			A_SpawnItemEx("IceFog3", 0, 0, 5, FRandom(2, 4), FRandom(2, 4), FRandom(2, 4),random(0,360));
			A_SpawnItemEx("IceFog3", 0, 0, 5, FRandom(1, 2), FRandom(1, 2), FRandom(1, 2),random(0,360));
			A_SpawnItemEx("IceFog3", 0, 0, 5, FRandom(1, 2), FRandom(4, 7), FRandom(0, 1),random(0,360));
			A_SpawnItemEx("IceFog3", 0, 0, 5, FRandom(3, 6), FRandom(3, 6), -FRandom(3, 6),random(0,360));
			A_SpawnItemEx("IceFog3", 0, 0, 5, FRandom(2, 4), FRandom(2, 4), -FRandom(2, 4),random(0,360));
			A_SpawnItemEx("IceFog3", 0, 0, 5, FRandom(1, 2), FRandom(1, 2), -FRandom(1, 2),random(0,360));
			A_SpawnItemEx("IceFog3", 0, 0, 5, FRandom(1, 2), FRandom(4, 7), -FRandom(0, 1),random(0,360));
			}
			FogLoop:
			SHGI AAAAAAAAAAAAAAAAAA 8 A_SpawnItemEX("GWM_IceFogHitbox");
			stop;

			SHGI FBCDE 4 Bright;
//			TNT1 A 0 A_ScaleVelocity(0.50, AAPTR_TARGET);	// AAPTR_TARGET is the player, for some reason.
			Stop;
	}
}


Class IceFog3 : Actor
{
	Default
	{
		Radius 1;
		Height 1;
		RenderStyle "Add";
		Alpha 0.2;
		XScale 1;
		YScale 1;
		+NoGravity
		PROJECTILE;
		+HEXENBOUNCE;
		BounceFactor 1;
	}

	States
	{
	Spawn:

	Spawnloop:
		SGFL F 2
		{
		A_FadeOut(0.005);
		if (Scale.X > 5)
		{A_Setscale(Scale.X+0.02,Scale.X+0.02);}
		else
		if (Scale.X > 3)
		{A_Setscale(Scale.X+0.06,Scale.X+0.06);}
		else
		{A_Setscale(Scale.X+0.1,Scale.X+0.1);}
		}
		TNT1 A 0 A_ScaleVelocity(frandom(0.8,1));
		TNT1 A 0 A_CheckProximity("Spawnloop","GWM_ShotgunIceBomb",200);
		TNT1 A 0 A_ScaleVelocity(0.6);
		Loop;
	}
}

class GWM_IceFogHitbox : GWM_IceProjectile
{
	Default
	{
		Radius 300;
		Height 300;
		Speed 0;
		Damagefunction (2);
		Damagetype "Ice";
		GWM_IceProjectile.IceSlowCount 10;
	}
	States
	{
		Spawn:
			TNT1 A 2;
		  Stop;
	}
}


class GWM_ShotgunIceTrail : Actor
{
	Default
	{
		Radius 13;
		Height 8;
		Speed 45; // parent - 5
		Projectile;
		+RANDOMIZE;
		RenderStyle "Add";
		Alpha 0.75;
	}
	States
	{
		Spawn:
			SHGI BCDE 6 Bright A_FadeOut(0.2);
			loop;
		Death:
			SHGI BCDE 4 Bright;
			stop;
	}
}

class GWM_ShotgunIceWallGenerator : GWM_IceProjectile
{
	override void Tick()
	{
		if (waterlevel > 0 && InStateSequence(CurState, ResolveState('Spawn')))
			SetStateLabel("WaterSpawn");
		Super.Tick();
	}
	Default
	{
		Radius 3;
		Height 3;
		Speed 80;
		DamageFunction (53);
		Scale 0.33;
		+THRUGHOST
		+RANDOMIZE
		+FORCEXYBILLBOARD
		-Nogravity
		DeathSound "weapons/icehit";
		Obituary "$KILLICESHOTGUN";
		Damagetype "Ice";
		GWM_IceProjectile.IceSlowCount 250;
	}
	int anglecount;
	States
	{
		Spawn:
			SHGI AAAAAA 1 Bright;
			SHGI A 0 Bright A_SpawnItemEx("GWM_ShotgunIceTrail");
			loop;
		Death:
			TNT1 A 5
			{
			A_SpawnItemEX("IceWallColumn",0,-22.5,00);
			A_SpawnItemEX("IceWallColumn",0,-7.5,00);
			A_SpawnItemEX("IceWallColumn",0,7.5,00);
			A_SpawnItemEX("IceWallColumn",0,22.5,00);
			A_SpawnItemEX("IceWallColumn",15,-22.5,00);
			A_SpawnItemEX("IceWallColumn",15,-7.5,00);
			A_SpawnItemEX("IceWallColumn",15,7.5,00);
			A_SpawnItemEX("IceWallColumn",15,22.5,00);

			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(0,20));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(0,20));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(0,20));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(0,20));

			}
			TNT1 A 5
			{
			A_SpawnItemEX("IceWallColumn",0,-22.5,20);
			A_SpawnItemEX("IceWallColumn",0,-7.5,20);
			A_SpawnItemEX("IceWallColumn",0,7.5,20);
			A_SpawnItemEX("IceWallColumn",0,22.5,20);
			A_SpawnItemEX("IceWallColumn",15,-22.5,20);
			A_SpawnItemEX("IceWallColumn",15,-7.5,20);
			A_SpawnItemEX("IceWallColumn",15,7.5,20);
			A_SpawnItemEX("IceWallColumn",15,22.5,20);

			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(20,40));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(20,40));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(20,40));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(20,40));
			}
			TNT1 A 5
			{
			A_SpawnItemEX("IceWallColumn",0,-22.5,40);
			A_SpawnItemEX("IceWallColumn",0,-7.5,40);
			A_SpawnItemEX("IceWallColumn",0,7.5,40);
			A_SpawnItemEX("IceWallColumn",0,22.5,40);
			A_SpawnItemEX("IceWallColumn",15,-22.5,40);
			A_SpawnItemEX("IceWallColumn",15,-7.5,40);
			A_SpawnItemEX("IceWallColumn",15,7.5,40);
			A_SpawnItemEX("IceWallColumn",15,22.5,40);

			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(40,60));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(40,60));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(40,60));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(40,60));
			}
			TNT1 A 5
			{
			A_SpawnItemEX("IceWallColumn",0,-22.5,60);
			A_SpawnItemEX("IceWallColumn",0,-7.5,60);
			A_SpawnItemEX("IceWallColumn",0,7.5,60);
			A_SpawnItemEX("IceWallColumn",0,22.5,60);
			A_SpawnItemEX("IceWallColumn",15,-22.5,60);
			A_SpawnItemEX("IceWallColumn",15,-7.5,60);
			A_SpawnItemEX("IceWallColumn",15,7.5,60);
			A_SpawnItemEX("IceWallColumn",15,22.5,60);

			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(60,80));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(60,80));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(60,80));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(60,80));
			}
			stop;
		WaterSpawn:
			TNT1 A 0 A_Die();
			TNT1 A 0 A_Stop();
			TNT1 A 0 {bNOINTERACTION = true;}
			TNT1 A 5
			{
			A_SpawnItemEX("IceWallColumn",0,0,00,0,0,0,0,SXF_NOCHECKPOSITION);
			}
			
			TNT1 A 5
			{
			A_SpawnItemEX("IceWallColumn",0,0,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",15,0,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-15,0,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",0,-15,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",0,15,00,0,0,0,0,SXF_NOCHECKPOSITION);
			}
			
			TNT1 A 5
			{
			A_SpawnItemEX("IceWallColumn",15,0,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-15,0,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",0,-15,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",0,15,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",15,15,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-15,15,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-15,-15,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",15,-15,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",30,0,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-30,0,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",0,-30,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",0,30,00,0,0,0,0,SXF_NOCHECKPOSITION);
			}
			
			TNT1 A 5
			{
			A_SpawnItemEX("IceWallColumn",15,15,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-15,15,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-15,-15,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",15,-15,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",15,-30,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-15,-30,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-15,30,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",15,30,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-30,15,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",30,15,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-30,-15,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",30,-15,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",45,0,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-45,0,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",0,-45,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",0,45,00,0,0,0,0,SXF_NOCHECKPOSITION);
			}
			
			TNT1 A 5
			{
			
			A_SpawnItemEX("IceWallColumn",45,-15,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-45,15,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-15,-45,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",15,45,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",45,15,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-45,-15,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",15,-45,00,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-15,45,00,0,0,0,0,SXF_NOCHECKPOSITION);
			
			A_SpawnItemEX("IceWallColumn",30,30,0,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-30,30,0,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",30,-30,0,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-30,-30,0,0,0,0,0,SXF_NOCHECKPOSITION);
			
			A_SpawnItemEX("IceWallColumn",-30,15,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",30,-15,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-30,-15,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",30,15,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			
			A_SpawnItemEX("IceWallColumn",-15,30,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",15,-30,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-15,-30,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",15,30,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			
			A_SpawnItemEX("IceWallColumn",0,-30,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",0,30,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",-30,0,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			A_SpawnItemEX("IceWallColumn",30,0,-20,0,0,0,0,SXF_NOCHECKPOSITION);
			
			}
			
			TNT1 A 0
			{
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(0,20));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(0,20));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(0,20));
			A_SpawnItemEX("GWM_ShotgunIceTrail",frandom(0,15),frandom(-22.5,22.5),frandom(0,20));

			}
		XDeath:
			SHGI FBCDE 4 Bright;
			Stop;
	}
}
class IceWallColumn : Actor
{

	override void Tick()
	{
		A_Stop();
		super.Tick();
	}

	Default
	{
		Radius 15;
		Height 20;
		Alpha 0.7;
		Health 175;
		Scale 0;
		+NOBLOOD;
		+NoDamage;
		+SHOOTABLE;
		+NOGRAVITY;
		DeathSound "misc/icebreak";
		Renderstyle "Translucent";
		DamageFactor "Ice", 0;
		DamageFactor "Fire", 2;


	}
	int FogDelay;
	States
	{
		Spawn:
			TNT1 A 0 A_SetScale(1,0);
			ICWL AAAAA 1
			{
				A_Radiusgive("IceWallPushup",15,RGF_PLAYERS|RGF_MONSTERS,1);
				A_SetScale(1,Scale.Y+0.2);
				invoker.fogdelay = invoker.fogdelay + 1;
				if (invoker.fogdelay > random(8,15))
				{
				A_SpawnItemEX("IceFog4",0,0,0,frandom(-2,2),frandom(-2,2),frandom(-2,2),0,SXF_NOCHECKPOSITION);
				invoker.fogdelay = 0;
				}
			}

			Spawny:
			TNT1 A 0
			{

				fogdelay = fogdelay + 1;
				if (fogdelay > random(30,105))
				{
				A_SpawnItemEX("IceFog4",random(-10,10),random(-10,10),random(2,20),frandom(-0.75,0.75),frandom(-0.75,0.75),frandom(-1,0.55),0,SXF_NOCHECKPOSITION);
				fogdelay = 0;
				}

				bNODAMAGE = false;
				bSOLID = true;
				if (self.Health < 50)
					return ResolveState("Spawn4");
				if (self.Health < 100)
					return ResolveState("Spawn3");
				if (self.Health < 150)
					return ResolveState("Spawn2");
				return ResolveState(null);
			}
			ICWL A 1 Bright A_ChangeModel("", skinpath: "Models/Ice Wall", skin: "icebox1.png");
			loop;
			Spawn2:
			ICWL B 1 Bright A_ChangeModel("", skinpath: "Models/Ice Wall", skin: "icebox2.png");
			goto Spawny;
			Spawn3:
			ICWL C 1 Bright A_ChangeModel("", skinpath: "Models/Ice Wall", skin: "icebox3.png");
			goto Spawny;
			Spawn4:
			ICWL D 1 Bright A_ChangeModel("", skinpath: "Models/Ice Wall", skin: "icebox4.png");
			goto Spawny;

		Death:
			TNT1 A 0 A_Scream;
			TNT1 AAAAA 0 A_SpawnItemEX("StatusIceChunk",random(-15,15),random(-15,15),random(1,20),frandom(-4,4),frandom(-4,4),frandom(-1,6));

			SHGI BCDE 4 Bright;
			stop;
	}
}

Class IceFog4 : Actor
{
	Default
	{
		Radius 1;
		Height 1;
		RenderStyle "Add";
		Alpha 0.1;
		XScale 0.8;
		YScale 0.8;
		+NoGravity
		PROJECTILE;
		+HEXENBOUNCE;
		BounceFactor 1;
		+NOINTERACTION;
	}

	States
	{
	Spawn:

	Spawnloop:
		SGFL F 2
		{
		A_FadeOut(0.002);
		A_Setscale(Scale.X+0.02,Scale.X+0.02);
		A_ScaleVelocity(0.9);
		}
		Loop;
	}
}


class IceWallPushup : CustomInventory
{
	States
	{
		Pickup:
		TNT1 A 0 A_ChangeVelocity(Vel.X,Vel.Y,4,CVF_REPLACE);
		stop;
	}
}