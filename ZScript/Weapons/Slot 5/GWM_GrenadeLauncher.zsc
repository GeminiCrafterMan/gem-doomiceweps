class GWM_GrenadeLauncher : GWM_WeaponBase
{
	Default
	{
		//$Category Weapons
		//$Title "Grenade Launcher
		Weapon.SlotNumber 5;
		Weapon.SelectionOrder 2500; // Don't blow yourself up!!
		Weapon.UpSound "weapons/draw_primary";
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 2;
		Weapon.AmmoType "GWM_RocketAmmo";
		+WEAPON.NOAUTOFIRE
		Inventory.PickupMessage "$GOTGRENADELAUNCHER";
		Tag "$TAG_GRENADELAUNCHER";
	}
	States
	{
		Ready:
			RGLG A 1 A_WeaponReady;
			Loop;
		Deselect:
			RGLG A 1 A_Lower(18);
			Loop;
		Select:
			RGLG A 1 A_Raise(18);
			Loop;
		Fire:
			TNT1 A 0 {let player = GWM_Player(player.mo);}
			//TNT1 A 0 A_JumpIfInventory("GWM_ChargedGrenades",1,"Fire2");
			RGLG A 2 {
				A_OverlayPivot(OverlayID(), 0.55, 1);
				A_Overlay(-2, "Flash");
				A_SpawnItemEx("GWM_Flash");
				A_WeaponOffset(0, 24, WOF_ADD);
				A_StartSound("weapons/grenadefire", CHAN_WEAPON);
				A_FireProjectile("GWM_Grenade", 0, true);
				A_OverlayScale(OverlayID(), 0.11, 0, WOF_ADD);
			}
			RGLG AA 2 A_OverlayScale(OverlayID(), 0.11, 0, WOF_ADD);
			TNT1 A 0
			{
				let player = GWM_Player(player.mo); 
				player.PW_FiringGrenade = true; //boolean instead of token.
			}
			Goto Fire.Done;
		Fire2:
			RGLG A 0 {
				A_OverlayPivot(OverlayID(), 0.55, 1);
				A_Overlay(-2, "Flash");
				A_SpawnItemEx("GWM_Flash");
				A_SpawnItemEx("GWM_Flash");
				A_WeaponOffset(0, 24, WOF_ADD);
				A_StartSound("weapons/grenadefire", CHAN_WEAPON);
				A_StartSound("weapons/chargedrocketfire", CHAN_AUTO);
				A_FireProjectile("GWM_ChargedGrenade");
				A_OverlayScale(OverlayID(), 0.11, 0, WOF_ADD);
			}
			RGLG AA 2 A_OverlayScale(OverlayID(), 0.11, 0, WOF_ADD);
			Goto Fire.Done;
		Fire.Done:
			RGLG B 2 A_StartSound("weapons/grenadedrumspin", CHAN_BODY);
			RGLG C 2;
			RGLG D 2 A_StartSound("weapons/grenadedrumstop", CHAN_BODY);
			RGLG AAA 3 {
				A_WeaponOffset(0, -8, WOF_ADD);
				A_OverlayScale(OverlayID(), -0.11, 0, WOF_ADD);
			}
			RGLG A 0 A_ReFire;
			Goto Ready;
		Flash:
			RKTF ABC 2 Bright {
				A_Light1();
				A_OverlayPivot(OverlayID(), 0.66, 1);
				A_OverlayScale(OverlayID(), 0.11, 0, WOF_ADD);
			}
			RKTF DE 2 Bright A_Light2;
			Stop;
		Spawn:
			RGLG Z -1;
			Stop;
	}
}

class GWM_Grenade : Actor
{
	bool missed;
	int timer;
	
	int blastradius;
	int blastradius2;
	int blastradius3;
	int blastspeed;
	
	action State GrenadeTimerJump()
	{
		if (invoker.timer < 81) {
			if (!invoker.missed) {
				return ResolveState(null);
			}
			else invoker.timer++;
		}
		if (invoker.timer >= 81) {
			return ResolveState("Death");
		}
		return State(null);
	}
	Default
	{
		Radius 8;
		Height 8;
		Speed 25;
		DamageFunction (90);
		Projectile;
		-NOGRAVITY
		+RANDOMIZE
		+USEBOUNCESTATE
		+THRUGHOST
		BounceType "Hexen";
		Gravity 0.25;
		SeeSound "";
		DeathSound "weapons/explode";
		BounceSound "weapons/grndimp";
		Obituary "$KILLGRENADE";
		DamageType "Rocket";
	}
	int charge;
	States
	{
		Spawn:
			TNT1 A 0 nodelay
			{	
				let gren = GWM_Grenade(self);
				let player = GWM_Player(target);
				if(gren)
				{
					gren.charge = player.chargedGrenades;
				}
			}
		Spawnloop:
			GNDE A 1 Bright {
				GrenadeTimerJump();
				A_SpawnItemEx("GWM_RocketTrail", -20);
			}
			GNDE A 1 Bright GrenadeTimerJump;
			goto Spawnloop;
		Bounce:
			TNT1 A 0 {invoker.missed = true;}
			Goto Spawnloop;
		Bounce.Actor:
		Death:
			TNT1 A 0 {
				bMISSILE = false;
				bNOGRAVITY = true;
				self.Vel.X = 0;
				self.Vel.Y = 0;
				self.Vel.Z = 0;
				A_Scream();
				A_SetRenderstyle(alpha, STYLE_Add);
				A_Explode(125,215+15*invoker.charge);
			}
		TNT1 A 0 A_SpawnItemEX("ShakeItBaby",0,0,5);
		TNT1 AAAAA 1
		{
		blastradius = 65+15*invoker.charge;
		blastradius2 = blastradius * 0.5;
		blastradius3 = blastradius * 0.25;
		blastspeed = 4+1*invoker.charge;
		for (int i = 4; i > 0; i--)
		{
		A_SpawnItemEX("BlastFlameFX",frandom(-blastradius,blastradius),frandom(-blastradius,blastradius),frandom(-blastradius,blastradius),frandom(blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(1,359));
		A_SpawnItemEX("BlastFlameFX2",frandom(-blastradius3,blastradius3),frandom(-blastradius3,blastradius3),frandom(-blastradius3,blastradius3),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(1,359));
		}
		
		if(invoker.charge>3)
			{
			A_SpawnItemEX("BlastFlameFX",frandom(-blastradius,blastradius),frandom(-blastradius,blastradius),frandom(-blastradius,blastradius),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(1,359));
			A_SpawnItemEX("BlastFlameFX2",frandom(-blastradius,blastradius),frandom(-blastradius,blastradius),frandom(-blastradius,blastradius),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(1,359));
			}
			
		if(invoker.charge>5)
			{
			A_SpawnItemEX("BlastFlameFX",frandom(-blastradius,blastradius),frandom(-blastradius,blastradius),frandom(-blastradius,blastradius),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(1,359));
			A_SpawnItemEX("BlastFlameFX",frandom(-blastradius,blastradius),frandom(-blastradius,blastradius),frandom(-blastradius,blastradius),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(1,359));
			A_SpawnItemEX("BlastFlameFX2",frandom(-blastradius,blastradius),frandom(-blastradius,blastradius),frandom(-blastradius,blastradius),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(1,359));
			A_SpawnItemEX("BlastFlameFX2",frandom(-blastradius,blastradius),frandom(-blastradius,blastradius),frandom(-blastradius,blastradius),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(-blastspeed,blastspeed),frandom(1,359));
			}
		}
			//EXPL ABCDEFGHIJ 1 Bright;
			Stop;
	}
}

class GWM_ChargedGrenade : GWM_Grenade
{
	Default
	{
		Speed 35;
		DamageFunction (95);
		Scale 1.25;
		+EXTREMEDEATH
	}
	States
	{
		Spawn:
			GNDE A 1 Bright {
				GrenadeTimerJump();
				A_SpawnItemEx("GWM_RocketTrail", -20,0,0,frandom(-0.5,0.5),frandom(-0.5,0.5),frandom(-0.5,0.5));
				A_SpawnItemEx("GWM_RocketTrail", -20,0,0,frandom(-0.5,0.5),frandom(-0.5,0.5),frandom(-0.5,0.5));
			}
			Loop;
		Death:
			TNT1 A 0 {
				bMISSILE = false;
				bNOGRAVITY = true;
				self.Vel.X = 0;
				self.Vel.Y = 0;
				self.Vel.Z = 0;
				A_Scream();
				A_SetRenderstyle(alpha, STYLE_Add);
				A_Explode(135,240);
				
				
				A_SpawnItemEX("GWM_RocketBlast");
				A_SpawnItemEX("GWM_RocketBlast");
			}
			Stop;
	}
}